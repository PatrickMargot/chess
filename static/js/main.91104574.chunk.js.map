{"version":3,"sources":["constants.js","components/Piece.js","components/Field.js","utils/createChessBoard.js","utils/getNextChessBoard.js","utils/getMovesInALine.js","utils/getDiagonalMoves.js","utils/getStraightMoves.js","utils/checkKingCheck.js","utils/getPiecePosition.js","utils/getMovesWithChecks.js","utils/getPawnMoves.js","utils/getKnightMoves.js","utils/getKingMoves.js","utils/getMoves.js","utils/filterCheckMoves.js","utils/getAllMoves.js","components/ChessBoard.js","hooks/useWindowFocus.js","components/Menu.js","components/App.js","index.js"],"names":["PIECES","COLORS","CHESSBOARD_TYPE","PATHS","useStyles","makeStyles","theme","root","zIndex","isDragging","height","position","display","placeItems","icon","width","stroke","strokeWidth","pieceIcons","faChessPawn","faChessBishop","faChessKnight","faChessRook","faChessQueen","faChessKing","Piece","props","piece","canInteract","useState","setIsDragging","classes","dragControls","useDragControls","div","key","id","layoutId","className","style","color","pointerEvents","animate","scale","isMobile","exit","opacity","transition","duration","type","stiffness","damping","onPointerDown","event","start","cursorProgress","y","x","drag","onDragStart","onDragTransitionEnd","dragElastic","dragMomentum","dragConstraints","top","left","right","bottom","dragTransition","bounceStiffness","bounceDamping","name","isMove","hasPiece","cursor","webkitTouchCallout","webkitUserSelect","khtmlUserSelect","mozUserSelect","msUserSelect","userSelect","dot","margin","backgroundColor","borderRadius","Field","playerColor","isSelected","isChecked","onClick","selectedBackgroundColor","Color","mix","onMouseUp","onTouchEnd","preventDefault","stopPropagation","changedTouches","initial","createChessBoard","times","getInitialPieceName","getInitialPieceColor","uniqueId","moves","getNextChessBoard","lastPosition","newPosition","chessBoard","lastY","lastX","newY","newX","nextChessBoard","cloneDeep","selectedPiece","concat","finishY","length","kingCastledLeft","isEqual","kingCastledRight","getMovesInALine","selectedPosition","increment","Infinity","startY","startX","yIncrement","xIncrement","line","i","inRange","push","getDiagonalMoves","getStraightMoves","checkKingCheck","kingColor","kingPosition","checkPiece","row","getPiecePosition","enemeyMoves","getMovesWithChecks","some","pawnPosition","pawn","direction","pieceAbove","get","pieceTwoAbove","pieceAboveLeft","pieceAboveRight","pawnIsStarting","getPawnMoves","knightPosition","knight","filter","getKnightMoves","king","kingHasMoved","kingIsChecked","rook","move","path","forEach","pieceOnMove","pieceOnPath","kingOnPathChessBoard","getKingMoves","getMoves","selectedY","selectedX","newChessBoard","filterCheckMoves","getAllMoves","flatMap","map","isComputerRound","chessBoardTheme","placeContent","gridTemplateRows","gridTemplateColumns","border","BLACK","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","dialog","minWidth","ChessBoard","chessBoardType","localValue","localStorage","getItem","JSON","parse","chessBoardHistory","setChessBoardHistory","setChessBoard","setSelectedPosition","dialogText","setDialogText","windowIsFocused","document","hasFocus","setWindowIsFocused","window","addEventListener","useWindowFocus","history","useHistory","ref","useRef","enemyColor","doComputerMove","useCallback","debounce","allMoves","randomMove","random","undefined","handleClick","clientCoords","clientX","clientY","elements","elementsFromPoint","fieldUnderFinger","find","element","parentNode","current","index","children","indexOf","Math","floor","clickedPiece","useEffect","setItem","stringify","dialogMessage","capitalize","setTimeout","removeItem","fields","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","chessBoardThemes","label","WHITE","justifyContent","alignContent","alignItems","breakpoints","down","chessBoardContainer","gridRow","gridColumn","title","palette","secondary","main","padding","spacing","textAlign","buttons","gridGap","textTransform","themesDialogTitle","themesDialogItem","Menu","setChessBoardTheme","themesDialogOpen","setThemesDialogOpen","continueDialog","setContinueDialog","aboutDialogOpen","setAboutDialogOpen","variant","text","handleContinueClick","handleNewGameClick","titleContainer","Paper","Typography","delay","rotate","ease","List","ListItem","button","ListItemText","primary","ListItemIcon","fontSize","endIcon","href","target","createMuiTheme","overflow","App","ChessBoardContainer","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91104574.chunk.js","sourcesContent":["export const PIECES = {\r\n  PAWN: 'PAWN',\r\n  KNIGHT: 'KNIGHT',\r\n  BISHOP: 'BISHOP',\r\n  ROOK: 'ROOK',\r\n  QUEEN: 'QUEEN',\r\n  KING: 'KING',\r\n};\r\n\r\nexport const COLORS = {\r\n  WHITE: 'WHITE',\r\n  BLACK: 'BLACK',\r\n};\r\n\r\nexport const CHESSBOARD_TYPE = {\r\n  AUTOPLAY: 'AUTOPLAY',\r\n  COMPUTER: 'COMPUTER',\r\n  TWO_PLAYERS: 'TWO_PLAYERS',\r\n};\r\n\r\nexport const PATHS = {\r\n  COMPUTER_GAME: '/computer-game',\r\n  TWO_PLAYER_GAME: '/2-player-game',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { motion, AnimatePresence, useDragControls } from 'framer-motion';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faChessPawn,\r\n  faChessBishop,\r\n  faChessKnight,\r\n  faChessRook,\r\n  faChessQueen,\r\n  faChessKing,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport { PIECES } from '../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: ({ isDragging }) => ({\r\n    zIndex: isDragging ? 2 : 1,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n  }),\r\n\r\n  icon: {\r\n    width: '70% !important',\r\n    height: '70%',\r\n    stroke: 'black',\r\n    strokeWidth: 15,\r\n  },\r\n}));\r\n\r\nconst pieceIcons = {\r\n  [PIECES.PAWN]: faChessPawn,\r\n  [PIECES.BISHOP]: faChessBishop,\r\n  [PIECES.KNIGHT]: faChessKnight,\r\n  [PIECES.ROOK]: faChessRook,\r\n  [PIECES.QUEEN]: faChessQueen,\r\n  [PIECES.KING]: faChessKing,\r\n};\r\n\r\nfunction Piece(props) {\r\n\r\n  const {\r\n    piece,\r\n    canInteract,\r\n  } = props;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const classes = useStyles({ isDragging });\r\n\r\n  const dragControls = useDragControls();\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {piece &&\r\n        <motion.div\r\n          key={piece.id}\r\n          layoutId={piece.id}\r\n          className={classes.root}\r\n          style={{\r\n            color: piece?.color,\r\n            pointerEvents: isDragging ? 'none' : 'auto',\r\n          }}\r\n          animate={{\r\n            scale: isMobile && isDragging ? 2 : 1,\r\n          }}\r\n          exit={{\r\n            opacity: 0,\r\n            scale: 0,\r\n            transition: { duration: 0.3 },\r\n          }}\r\n          transition={{\r\n            type: 'spring',\r\n            stiffness: 1000,\r\n            damping: 65,\r\n          }}\r\n          onPointerDown={event => dragControls.start(event, { cursorProgress: { y: 0.5, x: 0.5 } })}\r\n          drag={canInteract}\r\n          onDragStart={() => setIsDragging(true)}\r\n          onDragTransitionEnd={() => setIsDragging(false)}\r\n          dragControls={dragControls}\r\n          dragElastic={1}\r\n          dragMomentum={false}\r\n          dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n          dragTransition={{\r\n            bounceStiffness: 900,\r\n            bounceDamping: 55,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={pieceIcons[piece.name]}\r\n            className={classes.icon}\r\n          />\r\n        </motion.div>\r\n      }\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default Piece;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { motion, useDragControls } from 'framer-motion'\r\nimport { Color } from 'framer'\r\n\r\nimport Piece from './Piece';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: ({ canInteract, isMove, hasPiece }) => ({\r\n    cursor: canInteract && (hasPiece || isMove) ? 'pointer' : 'auto',\r\n    position: 'relative',\r\n    webkitTouchCallout: 'none',\r\n    webkitUserSelect: 'none',\r\n    khtmlUserSelect: 'none',\r\n    mozUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n    userSelect: 'none',\r\n    '-webkit-tap-highlight-color': 'transparent',\r\n  }),\r\n\r\n  dot: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: 'auto',\r\n    height: '35%',\r\n    width: '35%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n  },\r\n\r\n}));\r\n\r\nfunction Field(props) {\r\n\r\n  const {\r\n    piece,\r\n    playerColor,\r\n    position,\r\n    backgroundColor,\r\n    isSelected,\r\n    isChecked,\r\n    isMove,\r\n    onClick,\r\n  } = props;\r\n\r\n  const canInteract = isMove || piece === null || piece.color === playerColor;\r\n\r\n  const dragControls = useDragControls();\r\n\r\n  const classes = useStyles({\r\n    canInteract,\r\n    isMove,\r\n    hasPiece: piece !== null,\r\n  });\r\n\r\n  const selectedBackgroundColor = Color.mix(\r\n    Color(backgroundColor),\r\n    Color('#ff0')\r\n  )(0.4);\r\n\r\n  const checkedBackgroundColor = '#ff7961';\r\n\r\n  function handleMouseUp() {\r\n\r\n    isMove && onClick(position);\r\n\r\n  }\r\n\r\n  function handleTouchEnd(event) {\r\n\r\n    event.preventDefault();\r\n\r\n    event.stopPropagation();\r\n\r\n    onClick(null, event.changedTouches[0]);\r\n\r\n  }\r\n\r\n  function handleMouseDown() {\r\n\r\n    !isSelected && !isMove && onClick(position);\r\n\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className={classes.root}\r\n      onPointerDown={canInteract ? handleMouseDown : null}\r\n      onMouseUp={canInteract ? handleMouseUp : null}\r\n      onTouchEnd={canInteract ? handleTouchEnd : null}\r\n      initial={false}\r\n      animate={{\r\n        backgroundColor: isSelected\r\n          ? selectedBackgroundColor\r\n          : isChecked\r\n            ? checkedBackgroundColor\r\n            : backgroundColor,\r\n        transition: { duration: 0.13 }\r\n      }}\r\n    >\r\n      <motion.div\r\n        className={classes.dot}\r\n        initial={{ scale: 0 }}\r\n        animate={{ scale: isMove ? 1 : 0, transition: { duration: 0.2 } }}\r\n      />\r\n      <Piece\r\n        piece={piece}\r\n        canInteract={canInteract && !isMove}\r\n        dragControls={dragControls}\r\n      />\r\n    </motion.div >\r\n  );\r\n}\r\n\r\nexport default Field;","import uniqueId from 'lodash/uniqueId';\r\nimport times from 'lodash/times';\r\n\r\nimport { PIECES, COLORS } from '../constants';\r\n\r\nfunction getInitialPieceName(y, x) {\r\n\r\n  if (y === 1 || y === 6) {\r\n\r\n    return PIECES.PAWN;\r\n    \r\n  }\r\n\r\n  if (y === 0 || y === 7) {\r\n\r\n    switch (x) {\r\n\r\n      case 0:\r\n      case 7:\r\n        return PIECES.ROOK;\r\n\r\n      case 1:\r\n      case 6:\r\n        return PIECES.KNIGHT;\r\n\r\n      case 2:\r\n      case 5:\r\n        return PIECES.BISHOP;\r\n\r\n      case 3:\r\n        return PIECES.QUEEN;\r\n\r\n      case 4:\r\n        return PIECES.KING;\r\n\r\n      default:\r\n        // do nothing\r\n    }\r\n\r\n  }\r\n\r\n  return null;\r\n\r\n}\r\n\r\nfunction getInitialPieceColor(y) {\r\n\r\n  switch (y) {\r\n\r\n    case 0:\r\n    case 1:\r\n      return COLORS.BLACK;\r\n\r\n    case 6:\r\n    case 7:\r\n      return COLORS.WHITE;\r\n\r\n    default:\r\n      return null;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default function createChessBoard() {\r\n\r\n  return times(8, y => times(8, x => {\r\n\r\n    const name = getInitialPieceName(y, x);\r\n\r\n    const color = getInitialPieceColor(y);\r\n\r\n    const id = uniqueId('piece_');\r\n\r\n    const moves = [];\r\n\r\n    return name\r\n      ? { name, color, id, moves }\r\n      : null;\r\n\r\n  }));\r\n\r\n}","import cloneDeep from 'lodash/cloneDeep';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { PIECES, COLORS } from '../constants';\r\n\r\nexport default function getNextChessBoard(lastPosition, newPosition, chessBoard) {\r\n\r\n  const { y: lastY, x: lastX } = lastPosition;\r\n\r\n  const { y: newY, x: newX } = newPosition;\r\n\r\n  const nextChessBoard = cloneDeep(chessBoard);\r\n\r\n  const selectedPiece = nextChessBoard[lastY][lastX];\r\n\r\n  nextChessBoard[newY][newX] = cloneDeep(\r\n    {\r\n      ...selectedPiece,\r\n      moves: selectedPiece.moves.concat(newPosition),\r\n    }\r\n  );\r\n\r\n  nextChessBoard[lastY][lastX] = null;\r\n\r\n  // promote pawn\r\n  const finishY = selectedPiece.color === COLORS.WHITE\r\n    ? 0\r\n    : chessBoard.length - 1;\r\n\r\n  if (selectedPiece.name === PIECES.PAWN && newY === finishY) {\r\n\r\n    nextChessBoard[newY][newX].name = PIECES.QUEEN;\r\n\r\n  }\r\n\r\n  // castling\r\n  if (selectedPiece.name === PIECES.KING && nextChessBoard[newY][newX].moves.length === 1) {\r\n\r\n    const kingCastledLeft = isEqual(newPosition, { y: newY, x: 2 });\r\n\r\n    const kingCastledRight = isEqual(newPosition, { y: newY, x: 6 });\r\n\r\n    if (kingCastledLeft) {\r\n\r\n      nextChessBoard[newY][3] = cloneDeep(\r\n        {\r\n          ...nextChessBoard[newY][0],\r\n          moves: selectedPiece.moves.concat(newPosition),\r\n        }\r\n      );\r\n\r\n      nextChessBoard[newY][0] = null;\r\n\r\n    } else if (kingCastledRight) {\r\n\r\n      nextChessBoard[newY][5] = cloneDeep(\r\n        {\r\n          ...nextChessBoard[newY][7],\r\n          moves: selectedPiece.moves.concat(newPosition),\r\n        }\r\n      );\r\n\r\n      nextChessBoard[newY][7] = null;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return nextChessBoard;\r\n\r\n}","import inRange from 'lodash/inRange';\r\n\r\nexport default function getMovesInALine(selectedPosition, increment, chessBoard, length = Infinity) {\r\n\r\n  const { y: startY, x: startX } = selectedPosition;\r\n\r\n  const selectedPiece = chessBoard[startY][startX];\r\n\r\n  const { y: yIncrement, x: xIncrement } = increment;\r\n\r\n  const line = [];\r\n\r\n  for (let i = 1; line.length < length; i++) {\r\n\r\n    const y = startY + yIncrement * i;\r\n\r\n    const x = startX + xIncrement * i;\r\n\r\n    if (inRange(y, chessBoard.length) && inRange(x, chessBoard[0].length)) {\r\n\r\n      const piece = chessBoard[y][x];\r\n\r\n      if (piece) {\r\n\r\n        if (piece.color !== selectedPiece.color) {\r\n\r\n          line.push({ y, x });\r\n\r\n        }\r\n\r\n        break;\r\n\r\n      } else {\r\n\r\n        line.push({ y, x });\r\n\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      break;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return line;\r\n\r\n}","import getMovesInALine from './getMovesInALine';\r\n\r\nexport default function getDiagonalMoves(selectedPosition, chessBoard, length = Infinity) {\r\n\r\n  return [\r\n\r\n    ...getMovesInALine(selectedPosition, { y: -1, x: -1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: -1, x: 1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 1, x: -1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 1, x: 1 }, chessBoard, length),\r\n\r\n  ];\r\n\r\n}","import getMovesInALine from './getMovesInALine';\r\n\r\nexport default function getStraightMoves(selectedPosition, chessBoard, length = Infinity) {\r\n\r\n  return [\r\n\r\n    ...getMovesInALine(selectedPosition, { y: -1, x: 0 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 0, x: -1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 0, x: 1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 1, x: 0 }, chessBoard, length),\r\n\r\n  ];\r\n\r\n}","import some from 'lodash/some';\r\n\r\nimport getDiagonalMoves from './getDiagonalMoves';\r\nimport getStraightMoves from './getStraightMoves';\r\nimport getMovesWithChecks from './getMovesWithChecks';\r\nimport getPiecePosition from './getPiecePosition';\r\nimport { PIECES } from '../constants';\r\n\r\nexport default function checkKingCheck(kingColor, chessBoard) {\r\n\r\n  const kingPosition = getPiecePosition(\r\n    piece => piece.color === kingColor && piece.name === PIECES.KING,\r\n    chessBoard\r\n  );\r\n\r\n  for (let y = 0; y < chessBoard.length; y++) {\r\n\r\n    const row = chessBoard[y];\r\n\r\n    for (let x = 0; x < row.length; x++) {\r\n\r\n      const piece = row[x];\r\n\r\n      if (piece && piece.color !== kingColor) {\r\n\r\n        const enemeyMoves = piece.name === PIECES.KING\r\n          ? [\r\n            ...getStraightMoves({ y, x }, chessBoard, 1),\r\n            ...getDiagonalMoves({ y, x }, chessBoard, 1),\r\n          ]\r\n          : getMovesWithChecks({ y, x }, chessBoard);\r\n\r\n        if (some(enemeyMoves, kingPosition)) {\r\n\r\n          return true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return false;\r\n\r\n}","export default function getPiecePosition(checkPiece, chessBoard) {\r\n\r\n  for (let y = 0; y < chessBoard.length; y++) {\r\n\r\n    const row = chessBoard[y];\r\n\r\n    for (let x = 0; x < row.length; x++) {\r\n\r\n      const piece = row[x];\r\n\r\n      if (piece && checkPiece(piece)) {\r\n\r\n        return { y, x };\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return null;\r\n\r\n}","import getPawnMoves from './getPawnMoves';\r\nimport getKnightMoves from './getKnightMoves';\r\nimport getKingMoves from './getKingMoves';\r\nimport getStraightMoves from './getStraightMoves';\r\nimport getDiagonalMoves from './getDiagonalMoves';\r\n\r\nimport { PIECES } from '../constants';\r\n\r\nexport default function getMovesWithChecks(selectedPosition, chessBoard) {\r\n\r\n  const { x, y } = selectedPosition;\r\n  \r\n  const selectedPiece = chessBoard[y][x];\r\n\r\n  if (selectedPiece === null) return [];\r\n\r\n  switch (selectedPiece.name) {\r\n\r\n    case PIECES.PAWN:\r\n      return getPawnMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.KNIGHT:\r\n      return getKnightMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.BISHOP:\r\n      return getDiagonalMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.ROOK:\r\n      return getStraightMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.QUEEN:\r\n     return [\r\n       ...getDiagonalMoves(selectedPosition, chessBoard),\r\n       ...getStraightMoves(selectedPosition, chessBoard),\r\n     ];\r\n\r\n    case PIECES.KING:\r\n      return getKingMoves(selectedPosition, chessBoard);\r\n\r\n    default:\r\n      return undefined;\r\n\r\n  }\r\n\r\n}","import get from 'lodash/get';\r\n\r\nimport { COLORS } from '../constants';\r\n\r\nexport default function getPawnMoves(pawnPosition, chessBoard) {\r\n\r\n  const { x, y } = pawnPosition;\r\n\r\n  const pawn = chessBoard[y][x];\r\n\r\n  const moves = [];\r\n\r\n  const direction = pawn.color === COLORS.WHITE ? -1 : 1;\r\n\r\n  const pieceAbove = get(chessBoard, `${y + direction}[${x}]`);\r\n\r\n  const pieceTwoAbove = get(chessBoard, `${y + 2 * direction}[${x}]`);\r\n\r\n  const pieceAboveLeft = get(chessBoard, `${y + direction}[${x - 1}]`);\r\n\r\n  const pieceAboveRight = get(chessBoard, `${y + direction}[${x + 1}]`);\r\n\r\n  const pawnIsStarting = pawn.color === COLORS.WHITE\r\n    ? y === 6\r\n    : y === 1;\r\n\r\n  pieceAbove === null\r\n    && moves.push({ y: y + direction, x });\r\n\r\n  pieceAbove === null\r\n    && pieceTwoAbove === null\r\n    && pawnIsStarting\r\n    && moves.push({ y: y + 2 * direction, x });\r\n  \r\n  pieceAboveLeft\r\n    && pieceAboveLeft.color !== pawn.color\r\n    && moves.push({ y: y + direction, x: x - 1 });\r\n\r\n  pieceAboveRight\r\n    && pieceAboveRight.color !== pawn.color\r\n    && moves.push({ y: y + direction, x: x + 1 });\r\n\r\n  return moves;\r\n\r\n}","import inRange from 'lodash/inRange';\r\n\r\nexport default function getKnightMoves(knightPosition, chessBoard) {\r\n\r\n  const { x, y } = knightPosition;\r\n\r\n  const knight = chessBoard[y][x];\r\n\r\n  const moves = [\r\n    { y: y - 2, x: x - 1 },\r\n    { y: y - 2, x: x + 1 },\r\n    { y: y - 1, x: x + 2 },\r\n    { y: y + 1, x: x + 2 },\r\n    { y: y + 2, x: x + 1 },\r\n    { y: y + 2, x: x - 1 },\r\n    { y: y + 1, x: x - 2 },\r\n    { y: y - 1, x: x - 2 },\r\n  ];\r\n\r\n  const movesInsideBoardAndLegal = moves.filter(({ y, x }) => {\r\n\r\n    const isInRange = inRange(y, chessBoard.length) && inRange(x, chessBoard[0].length);\r\n\r\n    return isInRange && (chessBoard[y][x] === null || chessBoard[y][x].color !== knight.color);\r\n\r\n  });\r\n\r\n  return movesInsideBoardAndLegal;\r\n\r\n}","import getDiagonalMoves from './getDiagonalMoves';\r\nimport getStraightMoves from './getStraightMoves';\r\nimport getNextChessBoard from './getNextChessBoard';\r\nimport checkKingCheck from './checkKingCheck';\r\n\r\nexport default function getKingMoves(kingPosition, chessBoard) {\r\n\r\n  const { y, x } = kingPosition;\r\n\r\n  const king = chessBoard[y][x];\r\n\r\n  const kingHasMoved = king.moves.length > 0;\r\n\r\n  const kingIsChecked = checkKingCheck(king.color, chessBoard);\r\n\r\n  const moves = [\r\n    ...getStraightMoves(kingPosition, chessBoard, 1),\r\n    ...getDiagonalMoves(kingPosition, chessBoard, 1),\r\n  ];\r\n\r\n  if (kingHasMoved || kingIsChecked) return moves;\r\n\r\n  // castling\r\n  const castlingOptions = [\r\n    {\r\n      rook: chessBoard[y][0],\r\n      move: { y, x: x - 2 },\r\n      path: { y, x: x - 1 },\r\n    },\r\n    {\r\n      rook: chessBoard[y][7],\r\n      move: { y, x: x + 2 },\r\n      path: { y, x: x + 1 },\r\n    },\r\n  ];\r\n\r\n  castlingOptions.forEach(({ rook, move, path }) => {\r\n\r\n    if (rook === null) return;\r\n\r\n    const rookHasMoved = rook.moves.length > 0;\r\n\r\n    if (rookHasMoved) return;\r\n\r\n    const pieceOnMove = chessBoard[move.y][move.x];\r\n\r\n    const pieceOnPath = chessBoard[path.y][path.x];\r\n\r\n    const kingOnPathChessBoard = getNextChessBoard(\r\n      kingPosition,\r\n      path,\r\n      chessBoard\r\n    );\r\n\r\n    const pathIsChecked = checkKingCheck(king.color, kingOnPathChessBoard);\r\n\r\n    !pathIsChecked\r\n      && pieceOnPath === null\r\n      && pieceOnMove === null\r\n      && moves.push(move);\r\n\r\n  });\r\n\r\n  return moves;\r\n\r\n}","import getMovesWithChecks from './getMovesWithChecks';\r\nimport filterCheckMoves from './filterCheckMoves';\r\n\r\nexport default function getMoves(selectedPosition, chessBoard) {\r\n\r\n  const moves = getMovesWithChecks(selectedPosition, chessBoard);\r\n\r\n  return filterCheckMoves(moves, selectedPosition, chessBoard);\r\n\r\n}","import getNextChessBoard from \"./getNextChessBoard\";\r\nimport checkKingCheck from './checkKingCheck';\r\n\r\nexport default function getNonCheckMoves(moves, selectedPosition, chessBoard) {\r\n\r\n  const { y: selectedY, x: selectedX } = selectedPosition;\r\n\r\n  const selectedPiece = chessBoard[selectedY][selectedX];\r\n\r\n  const nonCheckMoves = moves.filter(({ y, x }) => {\r\n\r\n    const newChessBoard = getNextChessBoard(\r\n      { y: selectedY, x: selectedX },\r\n      { y, x },\r\n      chessBoard\r\n    );\r\n\r\n    return !checkKingCheck(selectedPiece.color, newChessBoard);\r\n\r\n  });\r\n\r\n  return nonCheckMoves;\r\n\r\n}","import getMoves from './getMoves';\r\n\r\nexport default function getAllMoves(playerColor, chessBoard) {\r\n\r\n  const piecePositions = chessBoard.flatMap((row, y) =>\r\n\r\n    row.flatMap((piece, x) => {\r\n\r\n      return piece && piece.color === playerColor\r\n        ? { y, x }\r\n        : [];\r\n\r\n    })\r\n\r\n  );\r\n\r\n  return piecePositions.flatMap(position => {\r\n\r\n    const moves = getMoves(position, chessBoard);\r\n\r\n    return moves.map(move => ({ position, move }));\r\n\r\n  });\r\n\r\n}","import React, { useState, useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport some from 'lodash/some';\r\nimport capitalize from 'lodash/capitalize';\r\nimport random from 'lodash/random';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { AnimateSharedLayout } from \"framer-motion\";\r\n\r\nimport Field from './Field';\r\nimport useWindowFocus from '../hooks/useWindowFocus';\r\nimport createChessBoard from '../utils/createChessBoard';\r\nimport getNextChessBoard from '../utils/getNextChessBoard';\r\nimport getMoves from '../utils/getMoves';\r\nimport checkKingCheck from '../utils/checkKingCheck';\r\nimport getAllMoves from '../utils/getAllMoves';\r\nimport { COLORS, PIECES, CHESSBOARD_TYPE } from '../constants';\r\n\r\nconst borderRadius = 7;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: ({ isComputerRound, chessBoardTheme }) => ({\r\n    height: '100%',\r\n    pointerEvents: isComputerRound ? 'none' : 'auto',\r\n    display: 'grid',\r\n    placeContent: 'center',\r\n    gridTemplateRows: 'repeat(8, 1fr)',\r\n    gridTemplateColumns: 'repeat(8, 1fr)',\r\n    borderRadius: borderRadius + 2,\r\n    border: `3px ${chessBoardTheme.BLACK} solid`,\r\n    backgroundColor: chessBoardTheme.BLACK,\r\n    boxShadow: '0 8px 8px -6px rgba(0, 0, 0, 0.25)',\r\n    '& > :first-child': {\r\n      borderTopLeftRadius: borderRadius,\r\n    },\r\n    '& > :nth-child(8)': {\r\n      borderTopRightRadius: borderRadius,\r\n    },\r\n    '& > :nth-last-child(8)': {\r\n      borderBottomLeftRadius: borderRadius,\r\n    },\r\n    '& > :last-child': {\r\n      borderBottomRightRadius: borderRadius,\r\n    },\r\n  }),\r\n\r\n  dialog: {\r\n    minWidth: 180,\r\n  },\r\n\r\n}));\r\n\r\nfunction ChessBoard(props) {\r\n\r\n  const {\r\n    chessBoardTheme,\r\n    chessBoardType,\r\n  } = props;\r\n\r\n  const [chessBoardHistory, setChessBoardHistory] = useState(() => {\r\n\r\n    const localValue = localStorage.getItem(chessBoardType);\r\n\r\n    return localValue !== null && chessBoardType !== CHESSBOARD_TYPE.AUTOPLAY\r\n      ? JSON.parse(localValue)\r\n      : [createChessBoard()];\r\n\r\n  });\r\n\r\n  const chessBoard = chessBoardHistory[chessBoardHistory.length - 1];\r\n\r\n  const setChessBoard = (chessBoard) => setChessBoardHistory([...chessBoardHistory, chessBoard]);\r\n\r\n  const [selectedPosition, setSelectedPosition] = useState(null);\r\n\r\n  const [dialogText, setDialogText] = useState(null);\r\n\r\n  const windowIsFocused = useWindowFocus();\r\n\r\n  const history = useHistory();\r\n\r\n  const ref = useRef();\r\n\r\n  const playerColor = chessBoardHistory.length % 2 === 0\r\n    ? COLORS.BLACK\r\n    : COLORS.WHITE;\r\n\r\n  const enemyColor = chessBoardHistory.length % 2 === 0\r\n    ? COLORS.WHITE\r\n    : COLORS.BLACK;\r\n\r\n  const isComputerRound =\r\n    chessBoardType === CHESSBOARD_TYPE.AUTOPLAY\r\n    || (chessBoardType === CHESSBOARD_TYPE.COMPUTER && playerColor === COLORS.BLACK);\r\n\r\n  const moves = selectedPosition && getMoves(selectedPosition, chessBoard);\r\n\r\n  const classes = useStyles({\r\n    isComputerRound,\r\n    chessBoardTheme,\r\n  });\r\n\r\n  // doComputerMove function will only change when chessBoard changes\r\n  // this will ensure that the debounce function will work\r\n  const doComputerMove = useCallback(\r\n\r\n    debounce(() => {\r\n\r\n      const allMoves = getAllMoves(playerColor, chessBoard);\r\n\r\n      const randomMove = allMoves[random(allMoves.length - 1)];\r\n\r\n      if (randomMove === undefined) return;\r\n\r\n      const { position, move } = randomMove;\r\n\r\n      const nextChessBoard = getNextChessBoard(position, move, chessBoard);\r\n\r\n      setChessBoard(nextChessBoard);\r\n\r\n    }, chessBoardType === CHESSBOARD_TYPE.AUTOPLAY ? 3000 : 1000),\r\n\r\n    [chessBoard]\r\n\r\n  );\r\n\r\n  // run this code when chessBoard changes or on window focus\r\n  useEffect(() => {\r\n\r\n    if (!windowIsFocused) return;\r\n\r\n    if (chessBoardType !== CHESSBOARD_TYPE.AUTOPLAY) {\r\n\r\n      // add state to localStorage\r\n      chessBoardHistory.length > 1\r\n        && localStorage.setItem(chessBoardType, JSON.stringify(chessBoardHistory));\r\n\r\n      // check if game is over\r\n      const allMoves = getAllMoves(playerColor, chessBoard);\r\n\r\n      if (allMoves.length === 0) {\r\n\r\n        const kingIsChecked = checkKingCheck(playerColor, chessBoard);\r\n\r\n        const dialogMessage = kingIsChecked\r\n          ? `${capitalize(enemyColor)} won by checkmate.`\r\n          : 'Draw by stalemate';\r\n\r\n        setTimeout(() => setDialogText(dialogMessage), 1000);\r\n\r\n        localStorage.removeItem(chessBoardType);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // do a computer move if it is a computer round\r\n    isComputerRound && doComputerMove();\r\n\r\n  }, [chessBoard, windowIsFocused]);\r\n\r\n\r\n  function handleClick(position, clientCoords = null) {\r\n\r\n    if (clientCoords) {\r\n    \r\n      const { clientX, clientY } = clientCoords;\r\n\r\n      const elements = document.elementsFromPoint(clientX, clientY);\r\n\r\n      const fieldUnderFinger = elements.find(element => element.parentNode === ref.current);\r\n\r\n      const index = [...ref.current.children].indexOf(fieldUnderFinger);\r\n\r\n      if (index < 0) return;\r\n\r\n      position = {\r\n        y: Math.floor(index / 8),\r\n        x: index % 8,\r\n      };\r\n    \r\n    }\r\n\r\n    const { y, x } = position;\r\n\r\n    const clickedPiece = chessBoard[y][x];\r\n\r\n    // if selected and position is in moves, set next chess board\r\n    if (selectedPosition && some(moves, position)) {\r\n\r\n      const nextChessBoard = getNextChessBoard(\r\n        { y: selectedPosition.y, x: selectedPosition.x },\r\n        position,\r\n        chessBoard\r\n      );\r\n\r\n      setChessBoard(nextChessBoard);\r\n\r\n      setSelectedPosition(null);\r\n\r\n      // else if a piece was clicked, select\r\n    } else if (clickedPiece) {\r\n\r\n      setSelectedPosition(position);\r\n\r\n      // else if something is currently selected, deselect\r\n    } else if (selectedPosition) {\r\n\r\n      setSelectedPosition(null);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const fields = chessBoard.flatMap((row, y) => row.map((piece, x) => {\r\n\r\n    const position = { y, x };\r\n\r\n    const isMove = some(moves, position);\r\n\r\n    const isSelected = selectedPosition && chessBoard[selectedPosition.y][selectedPosition.x] === piece;\r\n\r\n    const isChecked =\r\n      piece\r\n      && piece.name === PIECES.KING\r\n      && checkKingCheck(piece.color, chessBoard);\r\n\r\n    return (\r\n      <Field\r\n        key={`${y}${x}`}\r\n        piece={piece}\r\n        playerColor={playerColor}\r\n        position={position}\r\n        backgroundColor={chessBoardTheme[\r\n          (y + x) % 2 === 0 ? COLORS.WHITE : COLORS.BLACK\r\n        ]}\r\n        isSelected={isSelected}\r\n        isMove={isMove}\r\n        isChecked={isChecked}\r\n        onClick={handleClick}\r\n      />\r\n    );\r\n\r\n  }));\r\n\r\n  return (\r\n    <div className={classes.root} ref={ref}>\r\n\r\n      <AnimateSharedLayout>\r\n        {fields}\r\n      </AnimateSharedLayout>\r\n\r\n      <Dialog onClose={() => history.push('/')} open={dialogText !== null} >\r\n        <DialogTitle>Game Over</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className={classes.dialog} >\r\n            {dialogText}\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={() => history.push('/')} color=\"primary\" >\r\n              Continue\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChessBoard;","import { useState } from 'react';\r\n\r\nexport default function useWindowFocus() {\r\n\r\n  const [windowIsFocused, setWindowIsFocused] = useState(document.hasFocus());\r\n\r\n  window.addEventListener('blur', () => setWindowIsFocused(false));\r\n\r\n  window.addEventListener('focus', () => setWindowIsFocused(true));\r\n\r\n  return windowIsFocused\r\n\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ChessBoard from './ChessBoard';\r\n\r\nimport { CHESSBOARD_TYPE, PATHS } from '../constants';\r\n\r\nconst chessBoardThemes = [\r\n  {\r\n    label: 'Green',\r\n    WHITE: '#eeeed2',\r\n    BLACK: '#8ab757',\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    WHITE: '#d3f4e5',\r\n    BLACK: '#53beb5',\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    WHITE: '#e9eaff',\r\n    BLACK: '#c197f7',\r\n  },\r\n  {\r\n    label: 'Brown',\r\n    WHITE: '#ffe7de',\r\n    BLACK: '#d69f61',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: {\r\n    height: '100%',\r\n    display: 'grid',\r\n    justifyContent: 'space-evenly',\r\n    alignContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    gridTemplateColumns: 'auto min(50vw, 72vh)',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      gridTemplateColumns: 'auto',\r\n    },\r\n  },\r\n\r\n  chessBoardContainer: {\r\n    height: 'min(50vw, 72vh)',\r\n    gridRow: '1 / 3',\r\n    gridColumn: '2 / 3',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  title: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    padding: theme.spacing(5),\r\n    textAlign: 'center',\r\n    borderRadius: 20,\r\n  },\r\n\r\n  buttons: {\r\n    display: 'grid',\r\n    justifyContent: 'center',\r\n    gridGap: theme.spacing(1),\r\n    gridTemplateColumns: '70%',\r\n\r\n    '& .MuiButton-root': {\r\n      width: '100%',\r\n      padding: theme.spacing(1.5),\r\n      borderRadius: 15,\r\n      textTransform: 'none',\r\n    },\r\n  },\r\n\r\n  themesDialogTitle: {\r\n    minWidth: 160,\r\n  },\r\n\r\n  themesDialogItem: {\r\n    '& .MuiListItemIcon-root': {\r\n      minWidth: 0,\r\n    }\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction Menu(props) {\r\n\r\n  const {\r\n    chessBoardTheme,\r\n    setChessBoardTheme,\r\n  } = props;\r\n\r\n  const [themesDialogOpen, setThemesDialogOpen] = useState(false);\r\n\r\n  const [continueDialog, setContinueDialog] = useState(null);\r\n\r\n  const [aboutDialogOpen, setAboutDialogOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const buttons = [\r\n    {\r\n      variant: 'contained',\r\n      text: 'Computer',\r\n      color: 'primary',\r\n      handleClick: () => {\r\n        if (localStorage.getItem(CHESSBOARD_TYPE.COMPUTER) === null) {\r\n\r\n          history.push(PATHS.COMPUTER_GAME);\r\n\r\n        } else {\r\n\r\n          setContinueDialog({\r\n            handleContinueClick: () => history.push(PATHS.COMPUTER_GAME),\r\n            handleNewGameClick: () => {\r\n              localStorage.removeItem(CHESSBOARD_TYPE.COMPUTER);\r\n              history.push(PATHS.COMPUTER_GAME);\r\n            },\r\n          });\r\n\r\n        }\r\n      },\r\n    },\r\n    {\r\n      variant: 'contained',\r\n      text: '2 Players',\r\n      color: 'primary',\r\n      handleClick: () => {\r\n        if (localStorage.getItem(CHESSBOARD_TYPE.TWO_PLAYERS) === null) {\r\n\r\n          history.push(PATHS.TWO_PLAYER_GAME);\r\n\r\n        } else {\r\n\r\n          setContinueDialog({\r\n            handleContinueClick: () => history.push(PATHS.TWO_PLAYER_GAME),\r\n            handleNewGameClick: () => {\r\n              localStorage.removeItem(CHESSBOARD_TYPE.TWO_PLAYERS);\r\n              history.push(PATHS.TWO_PLAYER_GAME);\r\n            },\r\n          });\r\n\r\n        }\r\n      },\r\n    },\r\n    {\r\n      variant: 'outlined',\r\n      text: 'Themes',\r\n      color: 'default',\r\n      handleClick: () => setThemesDialogOpen(true),\r\n    },\r\n    {\r\n      variant: 'outlined',\r\n      text: 'About',\r\n      color: 'default',\r\n      handleClick: () => setAboutDialogOpen(true),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <motion.div\r\n        className={classes.titleContainer}\r\n        initial={{\r\n          opacity: 0,\r\n        }}\r\n        animate={{\r\n          opacity: 1,\r\n          transition: {\r\n            duration: 1,\r\n          },\r\n        }}\r\n      >\r\n        <Paper className={classes.title}>\r\n          <Typography variant=\"h1\">\r\n            Chess\r\n            </Typography>\r\n        </Paper>\r\n      </motion.div>\r\n      <div className={classes.buttons}>\r\n        {buttons.map(({ variant, text, color, handleClick }, i) => (\r\n          <motion.div\r\n            key={text}\r\n            initial={{\r\n              y: 400,\r\n              opacity: 0,\r\n            }}\r\n            animate={{\r\n              y: 0,\r\n              opacity: 1,\r\n              transition: {\r\n                delay: i * 0.15 + 0.3,\r\n                duration: 0.7,\r\n              },\r\n            }}\r\n          >\r\n            <Button variant={variant} color={color} onClick={handleClick} >\r\n              <Typography variant=\"h6\">\r\n                {text}\r\n              </Typography>\r\n            </Button>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n\r\n      <motion.div\r\n        className={classes.chessBoardContainer}\r\n        initial={{\r\n          x: 900,\r\n          rotate: 40,\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n          rotate: 0,\r\n          opacity: 1,\r\n          transition: {\r\n            duration: 1,\r\n            delay: 0.7,\r\n            ease: \"circOut\",\r\n          },\r\n        }}\r\n      >\r\n        <ChessBoard chessBoardTheme={chessBoardTheme} chessBoardType={CHESSBOARD_TYPE.AUTOPLAY} />\r\n      </motion.div>\r\n\r\n      <Dialog onClose={() => setThemesDialogOpen(false)} open={themesDialogOpen}>\r\n        <DialogTitle className={classes.themesDialogTitle}>Themes</DialogTitle>\r\n        <List>\r\n          {chessBoardThemes.map(({ label, WHITE, BLACK }, i) => (\r\n            <ListItem\r\n              className={classes.themesDialogItem}\r\n              button\r\n              onClick={() => {\r\n                setChessBoardTheme({ WHITE, BLACK });\r\n                setThemesDialogOpen(false);\r\n              }}\r\n              key={i}\r\n            >\r\n              <ListItemText primary={label} />\r\n              <ListItemIcon>\r\n                <FiberManualRecordIcon style={{ color: BLACK }} fontSize=\"large\" />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n\r\n      <Dialog onClose={() => setContinueDialog(null)} open={continueDialog !== null} >\r\n        <DialogTitle>Unfinished Game</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText >\r\n            Would you like to continue your last game?\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={continueDialog?.handleContinueClick} color=\"primary\" >\r\n              Continue\r\n            </Button>\r\n            <Button onClick={continueDialog?.handleNewGameClick} color=\"primary\" >\r\n              Create New Game\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog onClose={() => setAboutDialogOpen(false)} open={aboutDialogOpen} >\r\n        <DialogTitle>About</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText >\r\n            Hi, I'm Patrick Margot and I created this chess app.\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              endIcon={<GitHubIcon />}\r\n              href=\"https://github.com/PatrickMargot\"\r\n              target=\"_blank\"\r\n            >\r\n              Checkout My Github\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React, { useState, useEffect } from 'react';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { motion } from \"framer-motion\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport ChessBoard from './ChessBoard';\nimport Menu from './Menu';\n\nimport { CHESSBOARD_TYPE, PATHS } from '../constants';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#8bc34a',\n    },\n    secondary: {\n      main: '#eeeed2',\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    overflow: 'hidden',\n  },\n  chessBoardContainer: {\n    height: '100%',\n    display: 'grid',\n    gridTemplateColumns: '95vmin',\n    gridTemplateRows: '95vmin',\n    placeContent: 'center',\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [chessBoardTheme, setChessBoardTheme] = useState(() => {\n\n    const localValue = localStorage.getItem('CHESSBOARD_THEME');\n\n    return localValue !== null\n      ? JSON.parse(localValue)\n      : {\n        WHITE: '#eeeed2',\n        BLACK: '#8ab757',\n      };\n\n  });\n\n  useEffect(() => {\n\n    localStorage.setItem('CHESSBOARD_THEME', JSON.stringify(chessBoardTheme));\n\n  }, [chessBoardTheme]);\n\n  function ChessBoardContainer(props) {\n\n    return (\n      <motion.div\n        className={classes.chessBoardContainer}\n        initial={{\n          opacity: 0,\n          scale: 0.95,\n        }}\n        animate={{\n          opacity: 1,\n          scale: 1,\n          transition: {\n            duration: 0.3,\n          },\n        }}\n      >\n        {props.children}\n      </motion.div>\n    );\n\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <Router>\n          <Switch>\n\n            <Route path={PATHS.COMPUTER_GAME}>\n              <ChessBoardContainer>\n                <ChessBoard chessBoardTheme={chessBoardTheme} chessBoardType={CHESSBOARD_TYPE.COMPUTER} />\n              </ChessBoardContainer>\n            </Route>\n\n            <Route path={PATHS.TWO_PLAYER_GAME}>\n              <ChessBoardContainer>\n                <ChessBoard chessBoardTheme={chessBoardTheme} chessBoardType={CHESSBOARD_TYPE.TWO_PLAYERS} />\n              </ChessBoardContainer>\n            </Route>\n\n            <Route path=\"/\">\n              <Menu chessBoardTheme={chessBoardTheme} setChessBoardTheme={setChessBoardTheme} />\n            </Route>\n\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}