{"version":3,"sources":["constants.js","components/Piece.js","components/Field.js","utils/createChessBoard.js","utils/getNextChessBoard.js","utils/getMovesInALine.js","utils/getDiagonalMoves.js","utils/getStraightMoves.js","utils/checkKingCheck.js","utils/getPiecePosition.js","utils/getMovesWithChecks.js","utils/getPawnMoves.js","utils/getKnightMoves.js","utils/getKingMoves.js","utils/getMoves.js","utils/filterCheckMoves.js","utils/getAllMoves.js","components/ChessBoard.js","hooks/useWindowFocus.js","components/Menu.js","components/App.js","index.js"],"names":["PIECES","COLORS","CHESSBOARD_TYPE","PATHS","useStyles","makeStyles","theme","root","zIndex","isDragging","height","position","pointerEvents","display","placeItems","icon","width","stroke","strokeWidth","pieceIcons","faChessPawn","faChessBishop","faChessKnight","faChessRook","faChessQueen","faChessKing","Piece","props","piece","canInteract","dragControls","useState","setIsDragging","classes","div","key","id","layoutId","className","style","color","exit","opacity","scale","transition","duration","type","stiffness","damping","drag","onDragStart","onDragTransitionEnd","dragElastic","dragMomentum","dragConstraints","top","left","right","bottom","dragTransition","bounceStiffness","bounceDamping","name","isMove","hasPiece","cursor","webkitTouchCallout","webkitUserSelect","khtmlUserSelect","mozUserSelect","msUserSelect","userSelect","dot","margin","backgroundColor","borderRadius","Field","playerColor","isSelected","isChecked","onClick","useDragControls","selectedBackgroundColor","Color","mix","onMouseDown","event","start","cursorProgress","y","x","onMouseUp","initial","animate","createChessBoard","times","getInitialPieceName","getInitialPieceColor","uniqueId","moves","getNextChessBoard","lastPosition","newPosition","chessBoard","lastY","lastX","newY","newX","nextChessBoard","cloneDeep","selectedPiece","concat","finishY","length","kingCastledLeft","isEqual","kingCastledRight","getMovesInALine","selectedPosition","increment","Infinity","startY","startX","yIncrement","xIncrement","line","i","inRange","push","getDiagonalMoves","getStraightMoves","checkKingCheck","kingColor","kingPosition","checkPiece","row","getPiecePosition","enemeyMoves","getMovesWithChecks","some","pawnPosition","pawn","direction","pieceAbove","get","pieceTwoAbove","pieceAboveLeft","pieceAboveRight","pawnIsStarting","getPawnMoves","knightPosition","knight","filter","getKnightMoves","king","kingHasMoved","kingIsChecked","rook","move","path","forEach","pieceOnMove","pieceOnPath","kingOnPathChessBoard","getKingMoves","getMoves","selectedY","selectedX","newChessBoard","filterCheckMoves","getAllMoves","flatMap","map","isComputerRound","chessBoardTheme","placeContent","gridTemplateRows","gridTemplateColumns","border","BLACK","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","dialog","minWidth","ChessBoard","chessBoardType","localValue","localStorage","getItem","JSON","parse","chessBoardHistory","setChessBoardHistory","setChessBoard","setSelectedPosition","dialogText","setDialogText","windowIsFocused","document","hasFocus","setWindowIsFocused","window","addEventListener","useWindowFocus","history","useHistory","enemyColor","doComputerMove","useCallback","debounce","allMoves","randomMove","random","undefined","handleClick","clickedPiece","useEffect","setItem","stringify","dialogMessage","capitalize","setTimeout","removeItem","fields","Dialog","onClose","open","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","chessBoardThemes","label","WHITE","justifyContent","alignContent","alignItems","breakpoints","down","chessBoardContainer","gridRow","gridColumn","title","palette","secondary","main","padding","spacing","textAlign","buttons","gridGap","textTransform","themesDialogTitle","themesDialogItem","Menu","setChessBoardTheme","themesDialogOpen","setThemesDialogOpen","continueDialog","setContinueDialog","aboutDialogOpen","setAboutDialogOpen","variant","text","handleContinueClick","handleNewGameClick","titleContainer","Paper","Typography","delay","rotate","ease","List","ListItem","button","ListItemText","primary","ListItemIcon","fontSize","endIcon","href","target","createMuiTheme","overflow","App","ChessBoardContainer","children","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"ibAAaA,EACL,OADKA,EAEH,SAFGA,EAGH,SAHGA,EAIL,OAJKA,EAKJ,QALIA,EAML,OAGKC,EACJ,QADIA,EAEJ,QAGIC,EACD,WADCA,EAED,WAFCA,EAGE,cAGFC,EACI,iBADJA,EAEM,iBCPbC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,kBAAqB,CACzBC,OADI,EAAGC,WACc,EAAI,EACzBC,OAAQ,OACRC,SAAU,WACVC,cAAe,OACfC,QAAS,OACTC,WAAY,WAGdC,KAAM,CACJC,MAAO,iBACPN,OAAQ,MACRO,OAAQ,QACRC,YAAa,QAIXC,GAAU,mBACbnB,EAAcoB,KADD,cAEbpB,EAAgBqB,KAFH,cAGbrB,EAAgBsB,KAHH,cAIbtB,EAAcuB,KAJD,cAKbvB,EAAewB,KALF,cAMbxB,EAAcyB,KAND,GA6DDC,MApDf,SAAeC,GAAQ,IAGnBC,EAGED,EAHFC,MACAC,EAEEF,EAFFE,YACAC,EACEH,EADFG,aALkB,EAQgBC,oBAAS,GARzB,mBAQbtB,EARa,KAQDuB,EARC,KAUdC,EAAU7B,EAAU,CAAEK,eAE5B,OACE,kBAAC,IAAD,KACGmB,GACC,kBAAC,IAAOM,IAAR,CACEC,IAAKP,EAAMQ,GACXC,SAAUT,EAAMQ,GAChBE,UAAWL,EAAQ1B,KACnBgC,MAAO,CAAEC,MAAK,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAOY,OACvBC,KAAM,CACJC,QAAS,EACTC,MAAO,EACPC,WAAY,CAAEC,SAAU,KAE1BD,WAAY,CACVE,KAAM,SACNC,UAAW,IACXC,QAAS,IAEXC,KAAMpB,EACNqB,YAAa,kBAAMlB,GAAc,IACjCmB,oBAAqB,kBAAMnB,GAAc,IACzCF,aAAcA,EACdsB,YAAa,EACbC,cAAc,EACdC,gBAAiB,CAAEC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GACtDC,eAAgB,CACdC,gBAAiB,IACjBC,cAAe,KAGjB,kBAAC,IAAD,CACE9C,KAAMI,EAAWS,EAAMkC,MACvBxB,UAAWL,EAAQlB,UC/EzBX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CAErCC,KAAM,gBAAGsB,EAAH,EAAGA,YAAakC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,SAAxB,MAAwC,CAC5CC,OAAQpC,IAAgBmC,GAAYD,GAAU,UAAY,OAC1DpD,SAAU,WACVuD,mBAAoB,OACpBC,iBAAkB,OAClBC,gBAAiB,OACjBC,cAAe,OACfC,aAAc,OACdC,WAAY,SAGdC,IAAK,CACH7D,SAAU,WACV4C,IAAK,EACLG,OAAQ,EACRF,KAAM,EACNC,MAAO,EACPgB,OAAQ,OACR/D,OAAQ,MACRM,MAAO,MACP0D,gBAAiB,qBACjBC,aAAc,MACd9D,QAAS,oBA8EE+D,MAzEf,SAAejD,GAAQ,IAGnBC,EAQED,EARFC,MACAiD,EAOElD,EAPFkD,YACAlE,EAMEgB,EANFhB,SACA+D,EAKE/C,EALF+C,gBACAI,EAIEnD,EAJFmD,WACAC,EAGEpD,EAHFoD,UACAhB,EAEEpC,EAFFoC,OACAiB,EACErD,EADFqD,QAGInD,EAAckC,GAAoB,OAAVnC,GAAkBA,EAAMY,QAAUqC,EAE1D/C,EAAemD,cAEfhD,EAAU7B,EAAU,CACxByB,cACAkC,SACAC,SAAoB,OAAVpC,IAGNsD,EAA0BC,QAAMC,IACpCD,gBAAMT,GACNS,gBAAM,QAFwBA,CAG9B,IAkBF,OACE,kBAAC,IAAOjD,IAAR,CACEI,UAAWL,EAAQ1B,KACnB8E,YAAaxD,EAXjB,SAAyByD,GAEvBxD,EAAayD,MAAMD,EAAO,CAAEE,eAAgB,CAAEC,EAAG,GAAKC,EAAG,OAExDZ,IAAef,GAAUiB,EAAQrE,IAOa,KAC7CgF,UAAW9D,EAlBf,WAEEkC,GAAUiB,EAAQrE,IAgByB,KACzCiF,SAAS,EACTC,QAAS,CACPnB,gBAAiBI,EACbI,EACAH,EAzBqB,UA2BnBL,EACN9B,WAAY,CAAEC,SAAU,OAG1B,kBAAC,IAAOX,IAAR,CACEI,UAAWL,EAAQuC,IACnBoB,QAAS,CAAEjD,MAAO,GAClBkD,QAAS,CAAElD,MAAOoB,EAAS,EAAI,EAAGnB,WAAY,CAAEC,SAAU,OAE5D,kBAAC,EAAD,CACEjB,MAAOA,EACPC,YAAaA,IAAgBkC,EAC7BjC,aAAcA,M,0CCvCP,SAASgE,KAEtB,OAAOC,KAAM,GAAG,SAAAN,GAAC,OAAIM,KAAM,GAAG,SAAAL,GAE5B,IAAM5B,EA/DV,SAA6B2B,EAAGC,GAE9B,GAAU,IAAND,GAAiB,IAANA,EAEb,OAAOzF,EAIT,GAAU,IAANyF,GAAiB,IAANA,EAEb,OAAQC,GAEN,KAAK,EACL,KAAK,EACH,OAAO1F,EAET,KAAK,EACL,KAAK,EACH,OAAOA,EAET,KAAK,EACL,KAAK,EACH,OAAOA,EAET,KAAK,EACH,OAAOA,EAET,KAAK,EACH,OAAOA,EAQb,OAAO,KA2BQgG,CAAoBP,EAAGC,GAE9BlD,EAzBV,SAA8BiD,GAE5B,OAAQA,GAEN,KAAK,EACL,KAAK,EACH,OAAOxF,EAET,KAAK,EACL,KAAK,EACH,OAAOA,EAET,QACE,OAAO,MAYKgG,CAAqBR,GAE7BrD,EAAK8D,IAAS,UAIpB,OAAOpC,EACH,CAAEA,OAAMtB,QAAOJ,KAAI+D,MAHT,IAIV,W,qDCzEO,SAASC,GAAkBC,EAAcC,EAAaC,GAAa,IAErEC,EAAoBH,EAAvBZ,EAAagB,EAAUJ,EAAbX,EAEPgB,EAAkBJ,EAArBb,EAAYkB,EAASL,EAAZZ,EAEXkB,EAAiBC,KAAUN,GAE3BO,EAAgBF,EAAeJ,GAAOC,GAE5CG,EAAeF,GAAMC,GAAQE,KAAU,gBAEhCC,EAF+B,CAGlCX,MAAOW,EAAcX,MAAMY,OAAOT,MAItCM,EAAeJ,GAAOC,GAAS,KAG/B,IAAMO,EAAUF,EAActE,QAAUvC,EACpC,EACAsG,EAAWU,OAAS,EASxB,GAPIH,EAAchD,OAAS9D,GAAe0G,IAASM,IAEjDJ,EAAeF,GAAMC,GAAM7C,KAAO9D,GAKhC8G,EAAchD,OAAS9D,GAA2D,IAA5C4G,EAAeF,GAAMC,GAAMR,MAAMc,OAAc,CAEvF,IAAMC,EAAkBC,KAAQb,EAAa,CAAEb,EAAGiB,EAAMhB,EAAG,IAErD0B,EAAmBD,KAAQb,EAAa,CAAEb,EAAGiB,EAAMhB,EAAG,IAExDwB,GAEFN,EAAeF,GAAM,GAAKG,KAAU,gBAE7BD,EAAeF,GAAM,GAFO,CAG/BP,MAAOW,EAAcX,MAAMY,OAAOT,MAItCM,EAAeF,GAAM,GAAK,MAEjBU,IAETR,EAAeF,GAAM,GAAKG,KAAU,gBAE7BD,EAAeF,GAAM,GAFO,CAG/BP,MAAOW,EAAcX,MAAMY,OAAOT,MAItCM,EAAeF,GAAM,GAAK,MAO9B,OAAOE,E,gDCnEM,SAASS,GAAgBC,EAAkBC,EAAWhB,GAUnE,IAVmG,IAApBU,EAAmB,uDAAVO,IAE7EC,EAAsBH,EAAzB7B,EAAciC,EAAWJ,EAAd5B,EAEboB,EAAgBP,EAAWkB,GAAQC,GAE9BC,EAA8BJ,EAAjC9B,EAAkBmC,EAAeL,EAAlB7B,EAEjBmC,EAAO,GAEJC,EAAI,EAAGD,EAAKZ,OAASA,EAAQa,IAAK,CAEzC,IAAMrC,EAAIgC,EAASE,EAAaG,EAE1BpC,EAAIgC,EAASE,EAAaE,EAEhC,IAAIC,KAAQtC,EAAGc,EAAWU,UAAWc,KAAQrC,EAAGa,EAAW,GAAGU,QAuB5D,MArBA,IAAMrF,EAAQ2E,EAAWd,GAAGC,GAE5B,GAAI9D,EAAO,CAELA,EAAMY,QAAUsE,EAActE,OAEhCqF,EAAKG,KAAK,CAAEvC,IAAGC,MAIjB,MAIAmC,EAAKG,KAAK,CAAEvC,IAAGC,MAarB,OAAOmC,EC7CM,SAASI,GAAiBX,EAAkBf,GAAgC,IAApBU,EAAmB,uDAAVO,IAE9E,MAAM,GAAN,mBAEKH,GAAgBC,EAAkB,CAAE7B,GAAI,EAAGC,GAAI,GAAKa,EAAYU,IAFrE,YAIKI,GAAgBC,EAAkB,CAAE7B,GAAI,EAAGC,EAAG,GAAKa,EAAYU,IAJpE,YAMKI,GAAgBC,EAAkB,CAAE7B,EAAG,EAAGC,GAAI,GAAKa,EAAYU,IANpE,YAQKI,GAAgBC,EAAkB,CAAE7B,EAAG,EAAGC,EAAG,GAAKa,EAAYU,KCVtD,SAASiB,GAAiBZ,EAAkBf,GAAgC,IAApBU,EAAmB,uDAAVO,IAE9E,MAAM,GAAN,mBAEKH,GAAgBC,EAAkB,CAAE7B,GAAI,EAAGC,EAAG,GAAKa,EAAYU,IAFpE,YAIKI,GAAgBC,EAAkB,CAAE7B,EAAG,EAAGC,GAAI,GAAKa,EAAYU,IAJpE,YAMKI,GAAgBC,EAAkB,CAAE7B,EAAG,EAAGC,EAAG,GAAKa,EAAYU,IANnE,YAQKI,GAAgBC,EAAkB,CAAE7B,EAAG,EAAGC,EAAG,GAAKa,EAAYU,KCJtD,SAASkB,GAAeC,EAAW7B,GAOhD,IALA,IAAM8B,ECVO,SAA0BC,EAAY/B,GAEnD,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAAWU,OAAQxB,IAIrC,IAFA,IAAM8C,EAAMhC,EAAWd,GAEdC,EAAI,EAAGA,EAAI6C,EAAItB,OAAQvB,IAAK,CAEnC,IAAM9D,EAAQ2G,EAAI7C,GAElB,GAAI9D,GAAS0G,EAAW1G,GAEtB,MAAO,CAAE6D,IAAGC,KAQlB,OAAO,KDVc8C,EACnB,SAAA5G,GAAK,OAAIA,EAAMY,QAAU4F,GAAaxG,EAAMkC,OAAS9D,IACrDuG,GAGOd,EAAI,EAAGA,EAAIc,EAAWU,OAAQxB,IAIrC,IAFA,IAAM8C,EAAMhC,EAAWd,GAEdC,EAAI,EAAGA,EAAI6C,EAAItB,OAAQvB,IAAK,CAEnC,IAAM9D,EAAQ2G,EAAI7C,GAElB,GAAI9D,GAASA,EAAMY,QAAU4F,EAAW,CAEtC,IAAMK,EAAc7G,EAAMkC,OAAS9D,EAAf,sBAEbkI,GAAiB,CAAEzC,IAAGC,KAAKa,EAAY,IAF1B,YAGb0B,GAAiB,CAAExC,IAAGC,KAAKa,EAAY,KAE1CmC,GAAmB,CAAEjD,IAAGC,KAAKa,GAEjC,GAAIoC,IAAKF,EAAaJ,GAEpB,OAAO,GAUf,OAAO,EEpCM,SAASK,GAAmBpB,EAAkBf,GAAa,IAEhEb,EAAS4B,EAAT5B,EAEFoB,EAAgBP,EAFLe,EAAN7B,GAEyBC,GAEpC,GAAsB,OAAlBoB,EAAwB,MAAO,GAEnC,OAAQA,EAAchD,MAEpB,KAAK9D,EACH,OCfS,SAAsB4I,EAAcrC,GAAa,IAEtDb,EAASkD,EAATlD,EAAGD,EAAMmD,EAANnD,EAELoD,EAAOtC,EAAWd,GAAGC,GAErBS,EAAQ,GAER2C,EAAYD,EAAKrG,QAAUvC,GAAgB,EAAI,EAE/C8I,EAAaC,KAAIzC,EAAD,UAAgBd,EAAIqD,EAApB,YAAiCpD,EAAjC,MAEhBuD,EAAgBD,KAAIzC,EAAD,UAAgBd,EAAI,EAAIqD,EAAxB,YAAqCpD,EAArC,MAEnBwD,EAAiBF,KAAIzC,EAAD,UAAgBd,EAAIqD,EAApB,YAAiCpD,EAAI,EAArC,MAEpByD,EAAkBH,KAAIzC,EAAD,UAAgBd,EAAIqD,EAApB,YAAiCpD,EAAI,EAArC,MAErB0D,EAAiBP,EAAKrG,QAAUvC,EAC5B,IAANwF,EACM,IAANA,EAkBJ,OAhBe,OAAfsD,GACK5C,EAAM6B,KAAK,CAAEvC,EAAGA,EAAIqD,EAAWpD,MAErB,OAAfqD,GACuB,OAAlBE,GACAG,GACAjD,EAAM6B,KAAK,CAAEvC,EAAGA,EAAI,EAAIqD,EAAWpD,MAExCwD,GACKA,EAAe1G,QAAUqG,EAAKrG,OAC9B2D,EAAM6B,KAAK,CAAEvC,EAAGA,EAAIqD,EAAWpD,EAAGA,EAAI,IAE3CyD,GACKA,EAAgB3G,QAAUqG,EAAKrG,OAC/B2D,EAAM6B,KAAK,CAAEvC,EAAGA,EAAIqD,EAAWpD,EAAGA,EAAI,IAEpCS,EDvBIkD,CAAa/B,EAAkBf,GAExC,KAAKvG,EACH,OEpBS,SAAwBsJ,EAAgB/C,GAAa,IAE1Db,EAAS4D,EAAT5D,EAAGD,EAAM6D,EAAN7D,EAEL8D,EAAShD,EAAWd,GAAGC,GAqB7B,MAnBc,CACZ,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GACnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,IAGkB8D,QAAO,YAAe,IAAZ/D,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAIlD,OAFkBqC,KAAQtC,EAAGc,EAAWU,SAAWc,KAAQrC,EAAGa,EAAW,GAAGU,UAElC,OAArBV,EAAWd,GAAGC,IAAea,EAAWd,GAAGC,GAAGlD,QAAU+G,EAAO/G,UFD3EiH,CAAenC,EAAkBf,GAE1C,KAAKvG,EACH,OAAOiI,GAAiBX,EAAkBf,GAE5C,KAAKvG,EACH,OAAOkI,GAAiBZ,EAAkBf,GAE5C,KAAKvG,EACJ,MAAM,GAAN,mBACKiI,GAAiBX,EAAkBf,IADxC,YAEK2B,GAAiBZ,EAAkBf,KAGzC,KAAKvG,EACH,OGhCS,SAAsBqI,EAAc9B,GAAa,IAEtDd,EAAS4C,EAAT5C,EAAGC,EAAM2C,EAAN3C,EAELgE,EAAOnD,EAAWd,GAAGC,GAErBiE,EAAeD,EAAKvD,MAAMc,OAAS,EAEnC2C,EAAgBzB,GAAeuB,EAAKlH,MAAO+D,GAE3CJ,EAAK,sBACN+B,GAAiBG,EAAc9B,EAAY,IADrC,YAEN0B,GAAiBI,EAAc9B,EAAY,KAGhD,OAAIoD,GAAgBC,GAGI,CACtB,CACEC,KAAMtD,EAAWd,GAAG,GACpBqE,KAAM,CAAErE,IAAGC,EAAGA,EAAI,GAClBqE,KAAM,CAAEtE,IAAGC,EAAGA,EAAI,IAEpB,CACEmE,KAAMtD,EAAWd,GAAG,GACpBqE,KAAM,CAAErE,IAAGC,EAAGA,EAAI,GAClBqE,KAAM,CAAEtE,IAAGC,EAAGA,EAAI,KAINsE,SAAQ,YAA2B,IAAxBH,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAErC,GAAa,OAATF,KAEiBA,EAAK1D,MAAMc,OAAS,GAEzC,CAEA,IAAMgD,EAAc1D,EAAWuD,EAAKrE,GAAGqE,EAAKpE,GAEtCwE,EAAc3D,EAAWwD,EAAKtE,GAAGsE,EAAKrE,GAEtCyE,EAAuB/D,GAC3BiC,EACA0B,EACAxD,IAGoB4B,GAAeuB,EAAKlH,MAAO2H,IAG5B,OAAhBD,GACgB,OAAhBD,GACA9D,EAAM6B,KAAK8B,OAvCwB3D,EHiB/BiE,CAAa9C,EAAkBf,GAExC,QACE,QIrCS,SAAS8D,GAAS/C,EAAkBf,GAIjD,OCJa,SAA0BJ,EAAOmB,EAAkBf,GAAa,IAElE+D,EAA4BhD,EAA/B7B,EAAiB8E,EAAcjD,EAAjB5B,EAEhBoB,EAAgBP,EAAW+D,GAAWC,GAc5C,OAZsBpE,EAAMqD,QAAO,YAAe,IAAZ/D,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAEjC8E,EAAgBpE,GACpB,CAAEX,EAAG6E,EAAW5E,EAAG6E,GACnB,CAAE9E,IAAGC,KACLa,GAGF,OAAQ4B,GAAerB,EAActE,MAAOgI,MDVvCC,CAFO/B,GAAmBpB,EAAkBf,GAEpBe,EAAkBf,GELpC,SAASmE,GAAY7F,EAAa0B,GAc/C,OAZuBA,EAAWoE,SAAQ,SAACpC,EAAK9C,GAAN,OAExC8C,EAAIoC,SAAQ,SAAC/I,EAAO8D,GAElB,OAAO9D,GAASA,EAAMY,QAAUqC,EAC5B,CAAEY,IAAGC,KACL,SAMciF,SAAQ,SAAAhK,GAI5B,OAFc0J,GAAS1J,EAAU4F,GAEpBqE,KAAI,SAAAd,GAAI,MAAK,CAAEnJ,WAAUmJ,cCQ1C,IAEM1J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,gBAAGsK,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,gBAApB,MAA2C,CAC/CpK,OAAQ,OACRE,cAAeiK,EAAkB,OAAS,OAC1ChK,QAAS,OACTkK,aAAc,SACdC,iBAAkB,iBAClBC,oBAAqB,iBACrBtG,aAAcA,EACduG,OAAO,OAAD,OAASJ,EAAgBK,MAAzB,UACNzG,gBAAiBoG,EAAgBK,MACjCC,UAAW,qCACX,mBAAoB,CAClBC,oBAfe,GAiBjB,oBAAqB,CACnBC,qBAlBe,GAoBjB,yBAA0B,CACxBC,uBArBe,GAuBjB,kBAAmB,CACjBC,wBAxBe,KA4BnBC,OAAQ,CACNC,SAAU,SA0MCC,OArMf,SAAoBhK,GAAQ,IAGxBmJ,EAEEnJ,EAFFmJ,gBACAc,EACEjK,EADFiK,eAJuB,EAOyB7J,oBAAS,WAEzD,IAAM8J,EAAaC,aAAaC,QAAQH,GAExC,OAAsB,OAAfC,GAAuBD,IAAmB1L,EAC7C8L,KAAKC,MAAMJ,GACX,CAAC/F,SAbkB,mBAOlBoG,EAPkB,KAOCC,EAPD,KAiBnB5F,EAAa2F,EAAkBA,EAAkBjF,OAAS,GAE1DmF,EAAgB,SAAC7F,GAAD,OAAgB4F,EAAqB,GAAD,mBAAKD,GAAL,CAAwB3F,MAnBzD,EAqBuBxE,mBAAS,MArBhC,mBAqBlBuF,EArBkB,KAqBA+E,EArBA,OAuBWtK,mBAAS,MAvBpB,mBAuBlBuK,EAvBkB,KAuBNC,EAvBM,KAyBnBC,ECrFO,WAA2B,IAAD,EAEOzK,mBAAS0K,SAASC,YAFzB,mBAEhCF,EAFgC,KAEfG,EAFe,KAQvC,OAJAC,OAAOC,iBAAiB,QAAQ,kBAAMF,GAAmB,MAEzDC,OAAOC,iBAAiB,SAAS,kBAAMF,GAAmB,MAEnDH,ED6EiBM,GAElBC,EAAUC,cAEVnI,EAAcqH,EAAkBjF,OAAS,IAAM,EACjDhH,EACAA,EAEEgN,EAAaf,EAAkBjF,OAAS,IAAM,EAChDhH,EACAA,EAEE4K,EACJe,IAAmB1L,GACf0L,IAAmB1L,GAA4B2E,IAAgB5E,EAE/DkG,EAAQmB,GAAoB+C,GAAS/C,EAAkBf,GAEvDtE,EAAU7B,GAAU,CACxByK,kBACAC,oBAKIoC,EAAiBC,sBAErBC,KAAS,WAEP,IAAMC,EAAW3C,GAAY7F,EAAa0B,GAEpC+G,EAAaD,EAASE,IAAOF,EAASpG,OAAS,IAErD,QAAmBuG,IAAfF,EAAJ,CANa,IAUP1G,EAAiBR,GAFIkH,EAAnB3M,SAAmB2M,EAATxD,KAEuCvD,GAEzD6F,EAAcxF,MAEbgF,IAAmB1L,EAA2B,IAAO,KAExD,CAACqG,IAwCH,SAASkH,EAAY9M,GAAW,IAEtB8E,EAAS9E,EAAT8E,EAAGC,EAAM/E,EAAN+E,EAELgI,EAAenH,EAAWd,GAAGC,GAGnC,GAAI4B,GAAoBqB,IAAKxC,EAAOxF,GAAW,CAE7C,IAAMiG,EAAiBR,GACrB,CAAEX,EAAG6B,EAAiB7B,EAAGC,EAAG4B,EAAiB5B,GAC7C/E,EACA4F,GAGF6F,EAAcxF,GAEdyF,EAAoB,WAGXqB,EAETrB,EAAoB1L,GAGX2G,GAET+E,EAAoB,MA9DxBsB,qBAAU,WAER,GAAKnB,EAAL,CAEA,GAAIZ,IAAmB1L,EASrB,GANAgM,EAAkBjF,OAAS,GACtB6E,aAAa8B,QAAQhC,EAAgBI,KAAK6B,UAAU3B,IAKjC,IAFPxB,GAAY7F,EAAa0B,GAE7BU,OAAc,CAEzB,IAEM6G,EAFgB3F,GAAetD,EAAa0B,GAEf,UAC5BwH,IAAWd,GADiB,sBAE/B,oBAEJe,YAAW,kBAAMzB,EAAcuB,KAAgB,KAE/ChC,aAAamC,WAAWrC,GAO5Bf,GAAmBqC,OAElB,CAAC3G,EAAYiG,IAoChB,IAAM0B,EAAS3H,EAAWoE,SAAQ,SAACpC,EAAK9C,GAAN,OAAY8C,EAAIqC,KAAI,SAAChJ,EAAO8D,GAE5D,IAAM/E,EAAW,CAAE8E,IAAGC,KAEhB3B,EAAS4E,IAAKxC,EAAOxF,GAErBmE,EAAawC,GAAoBf,EAAWe,EAAiB7B,GAAG6B,EAAiB5B,KAAO9D,EAExFmD,EACJnD,GACGA,EAAMkC,OAAS9D,GACfmI,GAAevG,EAAMY,MAAO+D,GAEjC,OACE,kBAAC,EAAD,CACEpE,IAAG,UAAKsD,GAAL,OAASC,GACZ9D,MAAOA,EACPiD,YAAaA,EACblE,SAAUA,EACV+D,gBAAiBoG,GACdrF,EAAIC,GAAK,IAAM,EAAIzF,EAAeA,GAErC6E,WAAYA,EACZf,OAAQA,EACRgB,UAAWA,EACXC,QAASyI,UAMf,OACE,yBAAKnL,UAAWL,EAAQ1B,MAEtB,kBAAC,IAAD,KACG2N,GAGH,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMrB,EAAQ/E,KAAK,MAAMqG,KAAqB,OAAf/B,GAC9C,kBAACgC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBlM,UAAWL,EAAQwJ,QACnCa,GAEH,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ1J,QAAS,kBAAM+H,EAAQ/E,KAAK,MAAMxF,MAAM,WAAhD,iB,qGE/NNmM,GAAmB,CACvB,CACEC,MAAO,QACPC,MAAO,UACP1D,MAAO,WAET,CACEyD,MAAO,OACPC,MAAO,UACP1D,MAAO,WAET,CACEyD,MAAO,SACPC,MAAO,UACP1D,MAAO,WAET,CACEyD,MAAO,QACPC,MAAO,UACP1D,MAAO,YAIL/K,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAErCC,KAAK,aACHG,OAAQ,OACRG,QAAS,OACTiO,eAAgB,eAChBC,aAAc,eACdC,WAAY,SACZ/D,oBAAqB,wBAEpB3K,EAAM2O,YAAYC,KAAK,MAAQ,CAC9BjE,oBAAqB,SAIzBkE,oBAAoB,aAClBzO,OAAQ,kBACR0O,QAAS,QACTC,WAAY,SAEX/O,EAAM2O,YAAYC,KAAK,MAAQ,CAC9BrO,QAAS,SAIbyO,MAAO,CACL5K,gBAAiBpE,EAAMiP,QAAQC,UAAUC,KACzCC,QAASpP,EAAMqP,QAAQ,GACvBC,UAAW,SACXjL,aAAc,IAGhBkL,QAAS,CACPhP,QAAS,OACTiO,eAAgB,SAChBgB,QAASxP,EAAMqP,QAAQ,GACvB1E,oBAAqB,MAErB,oBAAqB,CACnBjK,MAAO,OACP0O,QAASpP,EAAMqP,QAAQ,KACvBhL,aAAc,GACdoL,cAAe,SAInBC,kBAAmB,CACjBtE,SAAU,KAGZuE,iBAAkB,CAChB,0BAA2B,CACzBvE,SAAU,QAoNDwE,OA7Mf,SAAcvO,GAAQ,IAGlBmJ,EAEEnJ,EAFFmJ,gBACAqF,EACExO,EADFwO,mBAJiB,EAO6BpO,oBAAS,GAPtC,mBAOZqO,EAPY,KAOMC,EAPN,OASyBtO,mBAAS,MATlC,mBASZuO,EATY,KASIC,EATJ,OAW2BxO,oBAAS,GAXpC,mBAWZyO,EAXY,KAWKC,EAXL,KAabxO,EAAU7B,KAEV2M,EAAUC,cAEV6C,EAAU,CACd,CACEa,QAAS,YACTC,KAAM,WACNnO,MAAO,UACPiL,YAAa,WAC4C,OAAnD3B,aAAaC,QAAQ7L,GAEvB6M,EAAQ/E,KAAK7H,GAIboQ,EAAkB,CAChBK,oBAAqB,kBAAM7D,EAAQ/E,KAAK7H,IACxC0Q,mBAAoB,WAClB/E,aAAamC,WAAW/N,GACxB6M,EAAQ/E,KAAK7H,QAOvB,CACEuQ,QAAS,YACTC,KAAM,YACNnO,MAAO,UACPiL,YAAa,WAC+C,OAAtD3B,aAAaC,QAAQ7L,GAEvB6M,EAAQ/E,KAAK7H,GAIboQ,EAAkB,CAChBK,oBAAqB,kBAAM7D,EAAQ/E,KAAK7H,IACxC0Q,mBAAoB,WAClB/E,aAAamC,WAAW/N,GACxB6M,EAAQ/E,KAAK7H,QAOvB,CACEuQ,QAAS,WACTC,KAAM,SACNnO,MAAO,UACPiL,YAAa,kBAAM4C,GAAoB,KAEzC,CACEK,QAAS,WACTC,KAAM,QACNnO,MAAO,UACPiL,YAAa,kBAAMgD,GAAmB,MAI1C,OACE,yBAAKnO,UAAWL,EAAQ1B,MAEtB,kBAAC,IAAO2B,IAAR,CACEI,UAAWL,EAAQ6O,eACnBlL,QAAS,CACPlD,QAAS,GAEXmD,QAAS,CACPnD,QAAS,EACTE,WAAY,CACVC,SAAU,KAId,kBAACkO,GAAA,EAAD,CAAOzO,UAAWL,EAAQqN,OACxB,kBAAC0B,GAAA,EAAD,CAAYN,QAAQ,MAApB,WAKJ,yBAAKpO,UAAWL,EAAQ4N,SACrBA,EAAQjF,KAAI,WAAwC9C,GAAxC,IAAG4I,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMnO,EAAlB,EAAkBA,MAAOiL,EAAzB,EAAyBA,YAAzB,OACX,kBAAC,IAAOvL,IAAR,CACEC,IAAKwO,EACL/K,QAAS,CACPH,EAAG,IACH/C,QAAS,GAEXmD,QAAS,CACPJ,EAAG,EACH/C,QAAS,EACTE,WAAY,CACVqO,MAAW,IAAJnJ,EAAW,GAClBjF,SAAU,MAId,kBAAC6L,EAAA,EAAD,CAAQgC,QAASA,EAASlO,MAAOA,EAAOwC,QAASyI,GAC/C,kBAACuD,GAAA,EAAD,CAAYN,QAAQ,MACjBC,SAOX,kBAAC,IAAOzO,IAAR,CACEI,UAAWL,EAAQkN,oBACnBvJ,QAAS,CACPF,EAAG,IACHwL,OAAQ,IAEVrL,QAAS,CACPH,EAAG,EACHwL,OAAQ,EACRxO,QAAS,EACTE,WAAY,CACVC,SAAU,EACVoO,MAAO,GACPE,KAAM,aAIV,kBAAC,GAAD,CAAYrG,gBAAiBA,EAAiBc,eAAgB1L,KAGhE,kBAACiO,EAAA,EAAD,CAAQC,QAAS,kBAAMiC,GAAoB,IAAQhC,KAAM+B,GACvD,kBAAC9B,EAAA,EAAD,CAAahM,UAAWL,EAAQ+N,mBAAhC,UACA,kBAACoB,GAAA,EAAD,KACGzC,GAAiB/D,KAAI,WAA0B9C,GAA1B,IAAG8G,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAO1D,EAAjB,EAAiBA,MAAjB,OACpB,kBAACkG,GAAA,EAAD,CACE/O,UAAWL,EAAQgO,iBACnBqB,QAAM,EACNtM,QAAS,WACPmL,EAAmB,CAAEtB,QAAO1D,UAC5BkF,GAAoB,IAEtBlO,IAAK2F,GAEL,kBAACyJ,GAAA,EAAD,CAAcC,QAAS5C,IACvB,kBAAC6C,GAAA,EAAD,KACE,kBAAC,KAAD,CAAuBlP,MAAO,CAAEC,MAAO2I,GAASuG,SAAS,iBAOnE,kBAACvD,EAAA,EAAD,CAAQC,QAAS,kBAAMmC,EAAkB,OAAOlC,KAAyB,OAAnBiC,GACpD,kBAAChC,EAAA,EAAD,wBACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mDAGA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ1J,QAAO,OAAEsL,QAAF,IAAEA,OAAF,EAAEA,EAAgBM,oBAAqBpO,MAAM,WAA5D,YAGA,kBAACkM,EAAA,EAAD,CAAQ1J,QAAO,OAAEsL,QAAF,IAAEA,OAAF,EAAEA,EAAgBO,mBAAoBrO,MAAM,WAA3D,sBAON,kBAAC2L,EAAA,EAAD,CAAQC,QAAS,kBAAMqC,GAAmB,IAAQpC,KAAMmC,GACtD,kBAAClC,EAAA,EAAD,cACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,6DAGA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACElM,MAAM,UACNmP,QAAS,kBAAC,KAAD,MACTC,KAAK,mCACLC,OAAO,UAJT,2BCxRNvR,GAAQwR,YAAe,CAC3BvC,QAAS,CACPiC,QAAS,CACP/B,KAAM,WAERD,UAAW,CACTC,KAAM,cAKNrP,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJG,OAAQ,OACRqR,SAAU,UAEZ5C,oBAAqB,CACnBzO,OAAQ,OACRG,QAAS,OACToK,oBAAqB,SACrBD,iBAAkB,SAClBD,aAAc,cA+EHiH,OA3Ef,WAEE,IAAM/P,EAAU7B,KAFH,EAIiC2B,oBAAS,WAErD,IAAM8J,EAAaC,aAAaC,QAAQ,oBAExC,OAAsB,OAAfF,EACHG,KAAKC,MAAMJ,GACX,CACAgD,MAAO,UACP1D,MAAO,cAZA,mBAINL,EAJM,KAIWqF,EAJX,KAuBb,SAAS8B,EAAoBtQ,GAE3B,OACE,kBAAC,IAAOO,IAAR,CACEI,UAAWL,EAAQkN,oBACnBvJ,QAAS,CACPlD,QAAS,EACTC,MAAO,KAETkD,QAAS,CACPnD,QAAS,EACTC,MAAO,EACPC,WAAY,CACVC,SAAU,MAIblB,EAAMuQ,UAMb,OA7BAvE,qBAAU,WAER7B,aAAa8B,QAAQ,mBAAoB5B,KAAK6B,UAAU/C,MAEvD,CAACA,IA0BF,kBAACqH,EAAA,EAAD,CAAe7R,MAAOA,IACpB,yBAAKgC,UAAWL,EAAQ1B,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOwJ,KAAM5J,GACX,kBAAC8R,EAAD,KACE,kBAAC,GAAD,CAAYnH,gBAAiBA,EAAiBc,eAAgB1L,MAIlE,kBAAC,IAAD,CAAO6J,KAAM5J,GACX,kBAAC8R,EAAD,KACE,kBAAC,GAAD,CAAYnH,gBAAiBA,EAAiBc,eAAgB1L,MAIlE,kBAAC,IAAD,CAAO6J,KAAK,KACV,kBAAC,GAAD,CAAMe,gBAAiBA,EAAiBqF,mBAAoBA,UCrG1EiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF7F,SAAS8F,eAAe,W","file":"static/js/main.a82a1390.chunk.js","sourcesContent":["export const PIECES = {\r\n  PAWN: 'PAWN',\r\n  KNIGHT: 'KNIGHT',\r\n  BISHOP: 'BISHOP',\r\n  ROOK: 'ROOK',\r\n  QUEEN: 'QUEEN',\r\n  KING: 'KING',\r\n};\r\n\r\nexport const COLORS = {\r\n  WHITE: 'WHITE',\r\n  BLACK: 'BLACK',\r\n};\r\n\r\nexport const CHESSBOARD_TYPE = {\r\n  AUTOPLAY: 'AUTOPLAY',\r\n  COMPUTER: 'COMPUTER',\r\n  TWO_PLAYERS: 'TWO_PLAYERS',\r\n};\r\n\r\nexport const PATHS = {\r\n  COMPUTER_GAME: '/computer-game',\r\n  TWO_PLAYER_GAME: '/2-player-game',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faChessPawn,\r\n  faChessBishop,\r\n  faChessKnight,\r\n  faChessRook,\r\n  faChessQueen,\r\n  faChessKing,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { PIECES } from '../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: ({ isDragging }) => ({\r\n    zIndex: isDragging ? 2 : 1,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'grid',\r\n    placeItems: 'center',\r\n  }),\r\n\r\n  icon: {\r\n    width: '70% !important',\r\n    height: '70%',\r\n    stroke: 'black',\r\n    strokeWidth: 15,\r\n  },\r\n}));\r\n\r\nconst pieceIcons = {\r\n  [PIECES.PAWN]: faChessPawn,\r\n  [PIECES.BISHOP]: faChessBishop,\r\n  [PIECES.KNIGHT]: faChessKnight,\r\n  [PIECES.ROOK]: faChessRook,\r\n  [PIECES.QUEEN]: faChessQueen,\r\n  [PIECES.KING]: faChessKing,\r\n};\r\n\r\nfunction Piece(props) {\r\n\r\n  const {\r\n    piece,\r\n    canInteract,\r\n    dragControls,\r\n  } = props;\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const classes = useStyles({ isDragging });\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {piece &&\r\n        <motion.div\r\n          key={piece.id}\r\n          layoutId={piece.id}\r\n          className={classes.root}\r\n          style={{ color: piece?.color }}\r\n          exit={{\r\n            opacity: 0,\r\n            scale: 0,\r\n            transition: { duration: 0.3 },\r\n          }}\r\n          transition={{\r\n            type: 'spring',\r\n            stiffness: 1000,\r\n            damping: 65,\r\n          }}\r\n          drag={canInteract}\r\n          onDragStart={() => setIsDragging(true)}\r\n          onDragTransitionEnd={() => setIsDragging(false)}\r\n          dragControls={dragControls}\r\n          dragElastic={1}\r\n          dragMomentum={false}\r\n          dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n          dragTransition={{\r\n            bounceStiffness: 900,\r\n            bounceDamping: 55,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={pieceIcons[piece.name]}\r\n            className={classes.icon}\r\n          />\r\n        </motion.div>\r\n      }\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default Piece;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { motion, useDragControls } from 'framer-motion'\r\nimport { Color } from 'framer'\r\n\r\nimport Piece from './Piece';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: ({ canInteract, isMove, hasPiece }) => ({\r\n    cursor: canInteract && (hasPiece || isMove) ? 'pointer' : 'auto',\r\n    position: 'relative',\r\n    webkitTouchCallout: 'none',\r\n    webkitUserSelect: 'none',\r\n    khtmlUserSelect: 'none',\r\n    mozUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n    userSelect: 'none',\r\n  }),\r\n\r\n  dot: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: 'auto',\r\n    height: '35%',\r\n    width: '35%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n  },\r\n\r\n}));\r\n\r\nfunction Field(props) {\r\n\r\n  const {\r\n    piece,\r\n    playerColor,\r\n    position,\r\n    backgroundColor,\r\n    isSelected,\r\n    isChecked,\r\n    isMove,\r\n    onClick,\r\n  } = props;\r\n\r\n  const canInteract = isMove || piece === null || piece.color === playerColor;\r\n\r\n  const dragControls = useDragControls();\r\n\r\n  const classes = useStyles({\r\n    canInteract,\r\n    isMove,\r\n    hasPiece: piece !== null,\r\n  });\r\n\r\n  const selectedBackgroundColor = Color.mix(\r\n    Color(backgroundColor),\r\n    Color('#ff0')\r\n  )(0.4);\r\n\r\n  const checkedBackgroundColor = '#ff7961';\r\n\r\n  function handleMouseUp() {\r\n\r\n    isMove && onClick(position);\r\n\r\n  }\r\n\r\n  function handleMouseDown(event) {\r\n\r\n    dragControls.start(event, { cursorProgress: { y: 0.5, x: 0.5 } });\r\n\r\n    !isSelected && !isMove && onClick(position);\r\n\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className={classes.root}\r\n      onMouseDown={canInteract ? handleMouseDown : null}\r\n      onMouseUp={canInteract ? handleMouseUp : null}\r\n      initial={false}\r\n      animate={{\r\n        backgroundColor: isSelected\r\n          ? selectedBackgroundColor\r\n          : isChecked\r\n            ? checkedBackgroundColor\r\n            : backgroundColor,\r\n        transition: { duration: 0.13 }\r\n      }}\r\n    >\r\n      <motion.div\r\n        className={classes.dot}\r\n        initial={{ scale: 0 }}\r\n        animate={{ scale: isMove ? 1 : 0, transition: { duration: 0.2 } }}\r\n      />\r\n      <Piece\r\n        piece={piece}\r\n        canInteract={canInteract && !isMove}\r\n        dragControls={dragControls}\r\n      />\r\n    </motion.div >\r\n  );\r\n}\r\n\r\nexport default Field;","import uniqueId from 'lodash/uniqueId';\r\nimport times from 'lodash/times';\r\n\r\nimport { PIECES, COLORS } from '../constants';\r\n\r\nfunction getInitialPieceName(y, x) {\r\n\r\n  if (y === 1 || y === 6) {\r\n\r\n    return PIECES.PAWN;\r\n    \r\n  }\r\n\r\n  if (y === 0 || y === 7) {\r\n\r\n    switch (x) {\r\n\r\n      case 0:\r\n      case 7:\r\n        return PIECES.ROOK;\r\n\r\n      case 1:\r\n      case 6:\r\n        return PIECES.KNIGHT;\r\n\r\n      case 2:\r\n      case 5:\r\n        return PIECES.BISHOP;\r\n\r\n      case 3:\r\n        return PIECES.QUEEN;\r\n\r\n      case 4:\r\n        return PIECES.KING;\r\n\r\n      default:\r\n        // do nothing\r\n    }\r\n\r\n  }\r\n\r\n  return null;\r\n\r\n}\r\n\r\nfunction getInitialPieceColor(y) {\r\n\r\n  switch (y) {\r\n\r\n    case 0:\r\n    case 1:\r\n      return COLORS.BLACK;\r\n\r\n    case 6:\r\n    case 7:\r\n      return COLORS.WHITE;\r\n\r\n    default:\r\n      return null;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default function createChessBoard() {\r\n\r\n  return times(8, y => times(8, x => {\r\n\r\n    const name = getInitialPieceName(y, x);\r\n\r\n    const color = getInitialPieceColor(y);\r\n\r\n    const id = uniqueId('piece_');\r\n\r\n    const moves = [];\r\n\r\n    return name\r\n      ? { name, color, id, moves }\r\n      : null;\r\n\r\n  }));\r\n\r\n}","import cloneDeep from 'lodash/cloneDeep';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { PIECES, COLORS } from '../constants';\r\n\r\nexport default function getNextChessBoard(lastPosition, newPosition, chessBoard) {\r\n\r\n  const { y: lastY, x: lastX } = lastPosition;\r\n\r\n  const { y: newY, x: newX } = newPosition;\r\n\r\n  const nextChessBoard = cloneDeep(chessBoard);\r\n\r\n  const selectedPiece = nextChessBoard[lastY][lastX];\r\n\r\n  nextChessBoard[newY][newX] = cloneDeep(\r\n    {\r\n      ...selectedPiece,\r\n      moves: selectedPiece.moves.concat(newPosition),\r\n    }\r\n  );\r\n\r\n  nextChessBoard[lastY][lastX] = null;\r\n\r\n  // promote pawn\r\n  const finishY = selectedPiece.color === COLORS.WHITE\r\n    ? 0\r\n    : chessBoard.length - 1;\r\n\r\n  if (selectedPiece.name === PIECES.PAWN && newY === finishY) {\r\n\r\n    nextChessBoard[newY][newX].name = PIECES.QUEEN;\r\n\r\n  }\r\n\r\n  // castling\r\n  if (selectedPiece.name === PIECES.KING && nextChessBoard[newY][newX].moves.length === 1) {\r\n\r\n    const kingCastledLeft = isEqual(newPosition, { y: newY, x: 2 });\r\n\r\n    const kingCastledRight = isEqual(newPosition, { y: newY, x: 6 });\r\n\r\n    if (kingCastledLeft) {\r\n\r\n      nextChessBoard[newY][3] = cloneDeep(\r\n        {\r\n          ...nextChessBoard[newY][0],\r\n          moves: selectedPiece.moves.concat(newPosition),\r\n        }\r\n      );\r\n\r\n      nextChessBoard[newY][0] = null;\r\n\r\n    } else if (kingCastledRight) {\r\n\r\n      nextChessBoard[newY][5] = cloneDeep(\r\n        {\r\n          ...nextChessBoard[newY][7],\r\n          moves: selectedPiece.moves.concat(newPosition),\r\n        }\r\n      );\r\n\r\n      nextChessBoard[newY][7] = null;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return nextChessBoard;\r\n\r\n}","import inRange from 'lodash/inRange';\r\n\r\nexport default function getMovesInALine(selectedPosition, increment, chessBoard, length = Infinity) {\r\n\r\n  const { y: startY, x: startX } = selectedPosition;\r\n\r\n  const selectedPiece = chessBoard[startY][startX];\r\n\r\n  const { y: yIncrement, x: xIncrement } = increment;\r\n\r\n  const line = [];\r\n\r\n  for (let i = 1; line.length < length; i++) {\r\n\r\n    const y = startY + yIncrement * i;\r\n\r\n    const x = startX + xIncrement * i;\r\n\r\n    if (inRange(y, chessBoard.length) && inRange(x, chessBoard[0].length)) {\r\n\r\n      const piece = chessBoard[y][x];\r\n\r\n      if (piece) {\r\n\r\n        if (piece.color !== selectedPiece.color) {\r\n\r\n          line.push({ y, x });\r\n\r\n        }\r\n\r\n        break;\r\n\r\n      } else {\r\n\r\n        line.push({ y, x });\r\n\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      break;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return line;\r\n\r\n}","import getMovesInALine from './getMovesInALine';\r\n\r\nexport default function getDiagonalMoves(selectedPosition, chessBoard, length = Infinity) {\r\n\r\n  return [\r\n\r\n    ...getMovesInALine(selectedPosition, { y: -1, x: -1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: -1, x: 1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 1, x: -1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 1, x: 1 }, chessBoard, length),\r\n\r\n  ];\r\n\r\n}","import getMovesInALine from './getMovesInALine';\r\n\r\nexport default function getStraightMoves(selectedPosition, chessBoard, length = Infinity) {\r\n\r\n  return [\r\n\r\n    ...getMovesInALine(selectedPosition, { y: -1, x: 0 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 0, x: -1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 0, x: 1 }, chessBoard, length),\r\n\r\n    ...getMovesInALine(selectedPosition, { y: 1, x: 0 }, chessBoard, length),\r\n\r\n  ];\r\n\r\n}","import some from 'lodash/some';\r\n\r\nimport getDiagonalMoves from './getDiagonalMoves';\r\nimport getStraightMoves from './getStraightMoves';\r\nimport getMovesWithChecks from './getMovesWithChecks';\r\nimport getPiecePosition from './getPiecePosition';\r\nimport { PIECES } from '../constants';\r\n\r\nexport default function checkKingCheck(kingColor, chessBoard) {\r\n\r\n  const kingPosition = getPiecePosition(\r\n    piece => piece.color === kingColor && piece.name === PIECES.KING,\r\n    chessBoard\r\n  );\r\n\r\n  for (let y = 0; y < chessBoard.length; y++) {\r\n\r\n    const row = chessBoard[y];\r\n\r\n    for (let x = 0; x < row.length; x++) {\r\n\r\n      const piece = row[x];\r\n\r\n      if (piece && piece.color !== kingColor) {\r\n\r\n        const enemeyMoves = piece.name === PIECES.KING\r\n          ? [\r\n            ...getStraightMoves({ y, x }, chessBoard, 1),\r\n            ...getDiagonalMoves({ y, x }, chessBoard, 1),\r\n          ]\r\n          : getMovesWithChecks({ y, x }, chessBoard);\r\n\r\n        if (some(enemeyMoves, kingPosition)) {\r\n\r\n          return true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return false;\r\n\r\n}","export default function getPiecePosition(checkPiece, chessBoard) {\r\n\r\n  for (let y = 0; y < chessBoard.length; y++) {\r\n\r\n    const row = chessBoard[y];\r\n\r\n    for (let x = 0; x < row.length; x++) {\r\n\r\n      const piece = row[x];\r\n\r\n      if (piece && checkPiece(piece)) {\r\n\r\n        return { y, x };\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return null;\r\n\r\n}","import getPawnMoves from './getPawnMoves';\r\nimport getKnightMoves from './getKnightMoves';\r\nimport getKingMoves from './getKingMoves';\r\nimport getStraightMoves from './getStraightMoves';\r\nimport getDiagonalMoves from './getDiagonalMoves';\r\n\r\nimport { PIECES } from '../constants';\r\n\r\nexport default function getMovesWithChecks(selectedPosition, chessBoard) {\r\n\r\n  const { x, y } = selectedPosition;\r\n  \r\n  const selectedPiece = chessBoard[y][x];\r\n\r\n  if (selectedPiece === null) return [];\r\n\r\n  switch (selectedPiece.name) {\r\n\r\n    case PIECES.PAWN:\r\n      return getPawnMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.KNIGHT:\r\n      return getKnightMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.BISHOP:\r\n      return getDiagonalMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.ROOK:\r\n      return getStraightMoves(selectedPosition, chessBoard);\r\n\r\n    case PIECES.QUEEN:\r\n     return [\r\n       ...getDiagonalMoves(selectedPosition, chessBoard),\r\n       ...getStraightMoves(selectedPosition, chessBoard),\r\n     ];\r\n\r\n    case PIECES.KING:\r\n      return getKingMoves(selectedPosition, chessBoard);\r\n\r\n    default:\r\n      return undefined;\r\n\r\n  }\r\n\r\n}","import get from 'lodash/get';\r\n\r\nimport { COLORS } from '../constants';\r\n\r\nexport default function getPawnMoves(pawnPosition, chessBoard) {\r\n\r\n  const { x, y } = pawnPosition;\r\n\r\n  const pawn = chessBoard[y][x];\r\n\r\n  const moves = [];\r\n\r\n  const direction = pawn.color === COLORS.WHITE ? -1 : 1;\r\n\r\n  const pieceAbove = get(chessBoard, `${y + direction}[${x}]`);\r\n\r\n  const pieceTwoAbove = get(chessBoard, `${y + 2 * direction}[${x}]`);\r\n\r\n  const pieceAboveLeft = get(chessBoard, `${y + direction}[${x - 1}]`);\r\n\r\n  const pieceAboveRight = get(chessBoard, `${y + direction}[${x + 1}]`);\r\n\r\n  const pawnIsStarting = pawn.color === COLORS.WHITE\r\n    ? y === 6\r\n    : y === 1;\r\n\r\n  pieceAbove === null\r\n    && moves.push({ y: y + direction, x });\r\n\r\n  pieceAbove === null\r\n    && pieceTwoAbove === null\r\n    && pawnIsStarting\r\n    && moves.push({ y: y + 2 * direction, x });\r\n  \r\n  pieceAboveLeft\r\n    && pieceAboveLeft.color !== pawn.color\r\n    && moves.push({ y: y + direction, x: x - 1 });\r\n\r\n  pieceAboveRight\r\n    && pieceAboveRight.color !== pawn.color\r\n    && moves.push({ y: y + direction, x: x + 1 });\r\n\r\n  return moves;\r\n\r\n}","import inRange from 'lodash/inRange';\r\n\r\nexport default function getKnightMoves(knightPosition, chessBoard) {\r\n\r\n  const { x, y } = knightPosition;\r\n\r\n  const knight = chessBoard[y][x];\r\n\r\n  const moves = [\r\n    { y: y - 2, x: x - 1 },\r\n    { y: y - 2, x: x + 1 },\r\n    { y: y - 1, x: x + 2 },\r\n    { y: y + 1, x: x + 2 },\r\n    { y: y + 2, x: x + 1 },\r\n    { y: y + 2, x: x - 1 },\r\n    { y: y + 1, x: x - 2 },\r\n    { y: y - 1, x: x - 2 },\r\n  ];\r\n\r\n  const movesInsideBoardAndLegal = moves.filter(({ y, x }) => {\r\n\r\n    const isInRange = inRange(y, chessBoard.length) && inRange(x, chessBoard[0].length);\r\n\r\n    return isInRange && (chessBoard[y][x] === null || chessBoard[y][x].color !== knight.color);\r\n\r\n  });\r\n\r\n  return movesInsideBoardAndLegal;\r\n\r\n}","import getDiagonalMoves from './getDiagonalMoves';\r\nimport getStraightMoves from './getStraightMoves';\r\nimport getNextChessBoard from './getNextChessBoard';\r\nimport checkKingCheck from './checkKingCheck';\r\n\r\nexport default function getKingMoves(kingPosition, chessBoard) {\r\n\r\n  const { y, x } = kingPosition;\r\n\r\n  const king = chessBoard[y][x];\r\n\r\n  const kingHasMoved = king.moves.length > 0;\r\n\r\n  const kingIsChecked = checkKingCheck(king.color, chessBoard);\r\n\r\n  const moves = [\r\n    ...getStraightMoves(kingPosition, chessBoard, 1),\r\n    ...getDiagonalMoves(kingPosition, chessBoard, 1),\r\n  ];\r\n\r\n  if (kingHasMoved || kingIsChecked) return moves;\r\n\r\n  // castling\r\n  const castlingOptions = [\r\n    {\r\n      rook: chessBoard[y][0],\r\n      move: { y, x: x - 2 },\r\n      path: { y, x: x - 1 },\r\n    },\r\n    {\r\n      rook: chessBoard[y][7],\r\n      move: { y, x: x + 2 },\r\n      path: { y, x: x + 1 },\r\n    },\r\n  ];\r\n\r\n  castlingOptions.forEach(({ rook, move, path }) => {\r\n\r\n    if (rook === null) return;\r\n\r\n    const rookHasMoved = rook.moves.length > 0;\r\n\r\n    if (rookHasMoved) return;\r\n\r\n    const pieceOnMove = chessBoard[move.y][move.x];\r\n\r\n    const pieceOnPath = chessBoard[path.y][path.x];\r\n\r\n    const kingOnPathChessBoard = getNextChessBoard(\r\n      kingPosition,\r\n      path,\r\n      chessBoard\r\n    );\r\n\r\n    const pathIsChecked = checkKingCheck(king.color, kingOnPathChessBoard);\r\n\r\n    !pathIsChecked\r\n      && pieceOnPath === null\r\n      && pieceOnMove === null\r\n      && moves.push(move);\r\n\r\n  });\r\n\r\n  return moves;\r\n\r\n}","import getMovesWithChecks from './getMovesWithChecks';\r\nimport filterCheckMoves from './filterCheckMoves';\r\n\r\nexport default function getMoves(selectedPosition, chessBoard) {\r\n\r\n  const moves = getMovesWithChecks(selectedPosition, chessBoard);\r\n\r\n  return filterCheckMoves(moves, selectedPosition, chessBoard);\r\n\r\n}","import getNextChessBoard from \"./getNextChessBoard\";\r\nimport checkKingCheck from './checkKingCheck';\r\n\r\nexport default function getNonCheckMoves(moves, selectedPosition, chessBoard) {\r\n\r\n  const { y: selectedY, x: selectedX } = selectedPosition;\r\n\r\n  const selectedPiece = chessBoard[selectedY][selectedX];\r\n\r\n  const nonCheckMoves = moves.filter(({ y, x }) => {\r\n\r\n    const newChessBoard = getNextChessBoard(\r\n      { y: selectedY, x: selectedX },\r\n      { y, x },\r\n      chessBoard\r\n    );\r\n\r\n    return !checkKingCheck(selectedPiece.color, newChessBoard);\r\n\r\n  });\r\n\r\n  return nonCheckMoves;\r\n\r\n}","import getMoves from './getMoves';\r\n\r\nexport default function getAllMoves(playerColor, chessBoard) {\r\n\r\n  const piecePositions = chessBoard.flatMap((row, y) =>\r\n\r\n    row.flatMap((piece, x) => {\r\n\r\n      return piece && piece.color === playerColor\r\n        ? { y, x }\r\n        : [];\r\n\r\n    })\r\n\r\n  );\r\n\r\n  return piecePositions.flatMap(position => {\r\n\r\n    const moves = getMoves(position, chessBoard);\r\n\r\n    return moves.map(move => ({ position, move }));\r\n\r\n  });\r\n\r\n}","import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport some from 'lodash/some';\r\nimport capitalize from 'lodash/capitalize';\r\nimport random from 'lodash/random';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { AnimateSharedLayout } from \"framer-motion\";\r\n\r\nimport Field from './Field';\r\nimport useWindowFocus from '../hooks/useWindowFocus';\r\nimport createChessBoard from '../utils/createChessBoard';\r\nimport getNextChessBoard from '../utils/getNextChessBoard';\r\nimport getMoves from '../utils/getMoves';\r\nimport checkKingCheck from '../utils/checkKingCheck';\r\nimport getAllMoves from '../utils/getAllMoves';\r\nimport { COLORS, PIECES, CHESSBOARD_TYPE } from '../constants';\r\n\r\nconst borderRadius = 7;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: ({ isComputerRound, chessBoardTheme }) => ({\r\n    height: '100%',\r\n    pointerEvents: isComputerRound ? 'none' : 'auto',\r\n    display: 'grid',\r\n    placeContent: 'center',\r\n    gridTemplateRows: 'repeat(8, 1fr)',\r\n    gridTemplateColumns: 'repeat(8, 1fr)',\r\n    borderRadius: borderRadius + 2,\r\n    border: `3px ${chessBoardTheme.BLACK} solid`,\r\n    backgroundColor: chessBoardTheme.BLACK,\r\n    boxShadow: '0 8px 8px -6px rgba(0, 0, 0, 0.25)',\r\n    '& > :first-child': {\r\n      borderTopLeftRadius: borderRadius,\r\n    },\r\n    '& > :nth-child(8)': {\r\n      borderTopRightRadius: borderRadius,\r\n    },\r\n    '& > :nth-last-child(8)': {\r\n      borderBottomLeftRadius: borderRadius,\r\n    },\r\n    '& > :last-child': {\r\n      borderBottomRightRadius: borderRadius,\r\n    },\r\n  }),\r\n\r\n  dialog: {\r\n    minWidth: 180,\r\n  },\r\n\r\n}));\r\n\r\nfunction ChessBoard(props) {\r\n\r\n  const {\r\n    chessBoardTheme,\r\n    chessBoardType,\r\n  } = props;\r\n\r\n  const [chessBoardHistory, setChessBoardHistory] = useState(() => {\r\n\r\n    const localValue = localStorage.getItem(chessBoardType);\r\n\r\n    return localValue !== null && chessBoardType !== CHESSBOARD_TYPE.AUTOPLAY\r\n      ? JSON.parse(localValue)\r\n      : [createChessBoard()];\r\n\r\n  });\r\n\r\n  const chessBoard = chessBoardHistory[chessBoardHistory.length - 1];\r\n\r\n  const setChessBoard = (chessBoard) => setChessBoardHistory([...chessBoardHistory, chessBoard]);\r\n\r\n  const [selectedPosition, setSelectedPosition] = useState(null);\r\n\r\n  const [dialogText, setDialogText] = useState(null);\r\n\r\n  const windowIsFocused = useWindowFocus();\r\n\r\n  const history = useHistory();\r\n\r\n  const playerColor = chessBoardHistory.length % 2 === 0\r\n    ? COLORS.BLACK\r\n    : COLORS.WHITE;\r\n\r\n  const enemyColor = chessBoardHistory.length % 2 === 0\r\n    ? COLORS.WHITE\r\n    : COLORS.BLACK;\r\n\r\n  const isComputerRound =\r\n    chessBoardType === CHESSBOARD_TYPE.AUTOPLAY\r\n    || (chessBoardType === CHESSBOARD_TYPE.COMPUTER && playerColor === COLORS.BLACK);\r\n\r\n  const moves = selectedPosition && getMoves(selectedPosition, chessBoard);\r\n\r\n  const classes = useStyles({\r\n    isComputerRound,\r\n    chessBoardTheme,\r\n  });\r\n\r\n  // doComputerMove function will only change when chessBoard changes\r\n  // this will ensure that the debounce function will work\r\n  const doComputerMove = useCallback(\r\n\r\n    debounce(() => {\r\n\r\n      const allMoves = getAllMoves(playerColor, chessBoard);\r\n\r\n      const randomMove = allMoves[random(allMoves.length - 1)];\r\n\r\n      if (randomMove === undefined) return;\r\n\r\n      const { position, move } = randomMove;\r\n\r\n      const nextChessBoard = getNextChessBoard(position, move, chessBoard);\r\n\r\n      setChessBoard(nextChessBoard);\r\n\r\n    }, chessBoardType === CHESSBOARD_TYPE.AUTOPLAY ? 3000 : 1000),\r\n\r\n    [chessBoard]\r\n\r\n  );\r\n\r\n  // run this code when chessBoard changes or on window focus\r\n  useEffect(() => {\r\n\r\n    if (!windowIsFocused) return;\r\n\r\n    if (chessBoardType !== CHESSBOARD_TYPE.AUTOPLAY) {\r\n\r\n      // add state to localStorage\r\n      chessBoardHistory.length > 1\r\n        && localStorage.setItem(chessBoardType, JSON.stringify(chessBoardHistory));\r\n\r\n      // check if game is over\r\n      const allMoves = getAllMoves(playerColor, chessBoard);\r\n\r\n      if (allMoves.length === 0) {\r\n\r\n        const kingIsChecked = checkKingCheck(playerColor, chessBoard);\r\n\r\n        const dialogMessage = kingIsChecked\r\n          ? `${capitalize(enemyColor)} won by checkmate.`\r\n          : 'Draw by stalemate';\r\n\r\n        setTimeout(() => setDialogText(dialogMessage), 1000);\r\n\r\n        localStorage.removeItem(chessBoardType);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // do a computer move if it is a computer round\r\n    isComputerRound && doComputerMove();\r\n\r\n  }, [chessBoard, windowIsFocused]);\r\n\r\n\r\n  function handleClick(position) {\r\n\r\n    const { y, x } = position;\r\n\r\n    const clickedPiece = chessBoard[y][x];\r\n\r\n    // if selected and position is in moves, set next chess board\r\n    if (selectedPosition && some(moves, position)) {\r\n\r\n      const nextChessBoard = getNextChessBoard(\r\n        { y: selectedPosition.y, x: selectedPosition.x },\r\n        position,\r\n        chessBoard\r\n      );\r\n\r\n      setChessBoard(nextChessBoard);\r\n\r\n      setSelectedPosition(null);\r\n\r\n      // else if a piece was clicked, select\r\n    } else if (clickedPiece) {\r\n\r\n      setSelectedPosition(position);\r\n\r\n      // else if something is currently selected, deselect\r\n    } else if (selectedPosition) {\r\n\r\n      setSelectedPosition(null);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const fields = chessBoard.flatMap((row, y) => row.map((piece, x) => {\r\n\r\n    const position = { y, x };\r\n\r\n    const isMove = some(moves, position);\r\n\r\n    const isSelected = selectedPosition && chessBoard[selectedPosition.y][selectedPosition.x] === piece;\r\n\r\n    const isChecked =\r\n      piece\r\n      && piece.name === PIECES.KING\r\n      && checkKingCheck(piece.color, chessBoard);\r\n\r\n    return (\r\n      <Field\r\n        key={`${y}${x}`}\r\n        piece={piece}\r\n        playerColor={playerColor}\r\n        position={position}\r\n        backgroundColor={chessBoardTheme[\r\n          (y + x) % 2 === 0 ? COLORS.WHITE : COLORS.BLACK\r\n        ]}\r\n        isSelected={isSelected}\r\n        isMove={isMove}\r\n        isChecked={isChecked}\r\n        onClick={handleClick}\r\n      />\r\n    );\r\n\r\n  }));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AnimateSharedLayout>\r\n        {fields}\r\n      </AnimateSharedLayout>\r\n\r\n      <Dialog onClose={() => history.push('/')} open={dialogText !== null} >\r\n        <DialogTitle>Game Over</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className={classes.dialog} >\r\n            {dialogText}\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={() => history.push('/')} color=\"primary\" >\r\n              Continue\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChessBoard;","import { useState } from 'react';\r\n\r\nexport default function useWindowFocus() {\r\n\r\n  const [windowIsFocused, setWindowIsFocused] = useState(document.hasFocus());\r\n\r\n  window.addEventListener('blur', () => setWindowIsFocused(false));\r\n\r\n  window.addEventListener('focus', () => setWindowIsFocused(true));\r\n\r\n  return windowIsFocused\r\n\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ChessBoard from './ChessBoard';\r\n\r\nimport { CHESSBOARD_TYPE, PATHS } from '../constants';\r\n\r\nconst chessBoardThemes = [\r\n  {\r\n    label: 'Green',\r\n    WHITE: '#eeeed2',\r\n    BLACK: '#8ab757',\r\n  },\r\n  {\r\n    label: 'Blue',\r\n    WHITE: '#d3f4e5',\r\n    BLACK: '#53beb5',\r\n  },\r\n  {\r\n    label: 'Purple',\r\n    WHITE: '#e9eaff',\r\n    BLACK: '#c197f7',\r\n  },\r\n  {\r\n    label: 'Brown',\r\n    WHITE: '#ffe7de',\r\n    BLACK: '#d69f61',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: {\r\n    height: '100%',\r\n    display: 'grid',\r\n    justifyContent: 'space-evenly',\r\n    alignContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    gridTemplateColumns: 'auto min(50vw, 72vh)',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      gridTemplateColumns: 'auto',\r\n    },\r\n  },\r\n\r\n  chessBoardContainer: {\r\n    height: 'min(50vw, 72vh)',\r\n    gridRow: '1 / 3',\r\n    gridColumn: '2 / 3',\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  title: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    padding: theme.spacing(5),\r\n    textAlign: 'center',\r\n    borderRadius: 20,\r\n  },\r\n\r\n  buttons: {\r\n    display: 'grid',\r\n    justifyContent: 'center',\r\n    gridGap: theme.spacing(1),\r\n    gridTemplateColumns: '70%',\r\n\r\n    '& .MuiButton-root': {\r\n      width: '100%',\r\n      padding: theme.spacing(1.5),\r\n      borderRadius: 15,\r\n      textTransform: 'none',\r\n    },\r\n  },\r\n\r\n  themesDialogTitle: {\r\n    minWidth: 160,\r\n  },\r\n\r\n  themesDialogItem: {\r\n    '& .MuiListItemIcon-root': {\r\n      minWidth: 0,\r\n    }\r\n  },\r\n\r\n}));\r\n\r\n\r\nfunction Menu(props) {\r\n\r\n  const {\r\n    chessBoardTheme,\r\n    setChessBoardTheme,\r\n  } = props;\r\n\r\n  const [themesDialogOpen, setThemesDialogOpen] = useState(false);\r\n\r\n  const [continueDialog, setContinueDialog] = useState(null);\r\n\r\n  const [aboutDialogOpen, setAboutDialogOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const buttons = [\r\n    {\r\n      variant: 'contained',\r\n      text: 'Computer',\r\n      color: 'primary',\r\n      handleClick: () => {\r\n        if (localStorage.getItem(CHESSBOARD_TYPE.COMPUTER) === null) {\r\n\r\n          history.push(PATHS.COMPUTER_GAME);\r\n\r\n        } else {\r\n\r\n          setContinueDialog({\r\n            handleContinueClick: () => history.push(PATHS.COMPUTER_GAME),\r\n            handleNewGameClick: () => {\r\n              localStorage.removeItem(CHESSBOARD_TYPE.COMPUTER);\r\n              history.push(PATHS.COMPUTER_GAME);\r\n            },\r\n          });\r\n\r\n        }\r\n      },\r\n    },\r\n    {\r\n      variant: 'contained',\r\n      text: '2 Players',\r\n      color: 'primary',\r\n      handleClick: () => {\r\n        if (localStorage.getItem(CHESSBOARD_TYPE.TWO_PLAYERS) === null) {\r\n\r\n          history.push(PATHS.TWO_PLAYER_GAME);\r\n\r\n        } else {\r\n\r\n          setContinueDialog({\r\n            handleContinueClick: () => history.push(PATHS.TWO_PLAYER_GAME),\r\n            handleNewGameClick: () => {\r\n              localStorage.removeItem(CHESSBOARD_TYPE.TWO_PLAYERS);\r\n              history.push(PATHS.TWO_PLAYER_GAME);\r\n            },\r\n          });\r\n\r\n        }\r\n      },\r\n    },\r\n    {\r\n      variant: 'outlined',\r\n      text: 'Themes',\r\n      color: 'default',\r\n      handleClick: () => setThemesDialogOpen(true),\r\n    },\r\n    {\r\n      variant: 'outlined',\r\n      text: 'About',\r\n      color: 'default',\r\n      handleClick: () => setAboutDialogOpen(true),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <motion.div\r\n        className={classes.titleContainer}\r\n        initial={{\r\n          opacity: 0,\r\n        }}\r\n        animate={{\r\n          opacity: 1,\r\n          transition: {\r\n            duration: 1,\r\n          },\r\n        }}\r\n      >\r\n        <Paper className={classes.title}>\r\n          <Typography variant=\"h1\">\r\n            Chess\r\n            </Typography>\r\n        </Paper>\r\n      </motion.div>\r\n      <div className={classes.buttons}>\r\n        {buttons.map(({ variant, text, color, handleClick }, i) => (\r\n          <motion.div\r\n            key={text}\r\n            initial={{\r\n              y: 400,\r\n              opacity: 0,\r\n            }}\r\n            animate={{\r\n              y: 0,\r\n              opacity: 1,\r\n              transition: {\r\n                delay: i * 0.15 + 0.3,\r\n                duration: 0.7,\r\n              },\r\n            }}\r\n          >\r\n            <Button variant={variant} color={color} onClick={handleClick} >\r\n              <Typography variant=\"h6\">\r\n                {text}\r\n              </Typography>\r\n            </Button>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n\r\n      <motion.div\r\n        className={classes.chessBoardContainer}\r\n        initial={{\r\n          x: 900,\r\n          rotate: 40,\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n          rotate: 0,\r\n          opacity: 1,\r\n          transition: {\r\n            duration: 1,\r\n            delay: 0.7,\r\n            ease: \"circOut\",\r\n          },\r\n        }}\r\n      >\r\n        <ChessBoard chessBoardTheme={chessBoardTheme} chessBoardType={CHESSBOARD_TYPE.AUTOPLAY} />\r\n      </motion.div>\r\n\r\n      <Dialog onClose={() => setThemesDialogOpen(false)} open={themesDialogOpen}>\r\n        <DialogTitle className={classes.themesDialogTitle}>Themes</DialogTitle>\r\n        <List>\r\n          {chessBoardThemes.map(({ label, WHITE, BLACK }, i) => (\r\n            <ListItem\r\n              className={classes.themesDialogItem}\r\n              button\r\n              onClick={() => {\r\n                setChessBoardTheme({ WHITE, BLACK });\r\n                setThemesDialogOpen(false);\r\n              }}\r\n              key={i}\r\n            >\r\n              <ListItemText primary={label} />\r\n              <ListItemIcon>\r\n                <FiberManualRecordIcon style={{ color: BLACK }} fontSize=\"large\" />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n\r\n      <Dialog onClose={() => setContinueDialog(null)} open={continueDialog !== null} >\r\n        <DialogTitle>Unfinished Game</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText >\r\n            Would you like to continue your last game?\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={continueDialog?.handleContinueClick} color=\"primary\" >\r\n              Continue\r\n            </Button>\r\n            <Button onClick={continueDialog?.handleNewGameClick} color=\"primary\" >\r\n              Create New Game\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog onClose={() => setAboutDialogOpen(false)} open={aboutDialogOpen} >\r\n        <DialogTitle>About</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText >\r\n            Hi, I'm Patrick Margot and I created this chess app.\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              endIcon={<GitHubIcon />}\r\n              href=\"https://github.com/PatrickMargot\"\r\n              target=\"_blank\"\r\n            >\r\n              Checkout My Github\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","import React, { useState, useEffect } from 'react';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { motion } from \"framer-motion\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport ChessBoard from './ChessBoard';\nimport Menu from './Menu';\n\nimport { CHESSBOARD_TYPE, PATHS } from '../constants';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#8bc34a',\n    },\n    secondary: {\n      main: '#eeeed2',\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    overflow: 'hidden',\n  },\n  chessBoardContainer: {\n    height: '100%',\n    display: 'grid',\n    gridTemplateColumns: '95vmin',\n    gridTemplateRows: '95vmin',\n    placeContent: 'center',\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [chessBoardTheme, setChessBoardTheme] = useState(() => {\n\n    const localValue = localStorage.getItem('CHESSBOARD_THEME');\n\n    return localValue !== null\n      ? JSON.parse(localValue)\n      : {\n        WHITE: '#eeeed2',\n        BLACK: '#8ab757',\n      };\n\n  });\n\n  useEffect(() => {\n\n    localStorage.setItem('CHESSBOARD_THEME', JSON.stringify(chessBoardTheme));\n\n  }, [chessBoardTheme]);\n\n  function ChessBoardContainer(props) {\n\n    return (\n      <motion.div\n        className={classes.chessBoardContainer}\n        initial={{\n          opacity: 0,\n          scale: 0.95,\n        }}\n        animate={{\n          opacity: 1,\n          scale: 1,\n          transition: {\n            duration: 0.3,\n          },\n        }}\n      >\n        {props.children}\n      </motion.div>\n    );\n\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <Router>\n          <Switch>\n\n            <Route path={PATHS.COMPUTER_GAME}>\n              <ChessBoardContainer>\n                <ChessBoard chessBoardTheme={chessBoardTheme} chessBoardType={CHESSBOARD_TYPE.COMPUTER} />\n              </ChessBoardContainer>\n            </Route>\n\n            <Route path={PATHS.TWO_PLAYER_GAME}>\n              <ChessBoardContainer>\n                <ChessBoard chessBoardTheme={chessBoardTheme} chessBoardType={CHESSBOARD_TYPE.TWO_PLAYERS} />\n              </ChessBoardContainer>\n            </Route>\n\n            <Route path=\"/\">\n              <Menu chessBoardTheme={chessBoardTheme} setChessBoardTheme={setChessBoardTheme} />\n            </Route>\n\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}